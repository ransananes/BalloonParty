{"ast":null,"code":"var _jsxFileName = \"C:\\\\MERN Projects\\\\BombParty\\\\bombparty\\\\client\\\\src\\\\components\\\\Game\\\\Game.js\";\nimport React, { Component } from 'react';\nimport './Game.css';\nimport { socket, SocketContext } from '../../components/context/socket';\nimport waterballoon from './assets/waterballoon.png';\nimport User from './Users/User';\nimport disintegrate from 'disintegrate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar balloon_elm, input_elm, current_user, roundTimer;\nexport default class Game extends Component {\n  constructor() {\n    super();\n\n    this.changeTextValueByID = (id, text) => {\n      for (let index = 0; index < this.state.user_names.length; index++) {\n        if (this.state.user_names[index]['id'] === id) {\n          let duplicate = this.state.user_names;\n          duplicate[index]['text'] = text;\n          this.setState({\n            user_names: duplicate\n          });\n        }\n      }\n    };\n\n    this.userTurn = () => {\n      setTimeout(function () {\n        input_elm.hidden = false;\n      }, 500);\n      socket.emit('user_animation', this.context.id);\n    };\n\n    this.userAnimation = data => {\n      if (input_elm.hidden === true) {\n        let user_elm_prev = document.getElementById(this.context.id);\n        user_elm_prev.style.animation = '';\n      }\n\n      current_user = document.getElementById(data);\n      current_user.style.animation = 'heartBeat infinite';\n      current_user.style.animationDuration = '2s';\n    };\n\n    this.handleChange = e => {\n      this.changeTextValueByID(this.context.id, e.target.value);\n      const data = {\n        id: this.context.id,\n        value: e.target.value\n      };\n      this.context.emit('changedTextValue', data);\n      this.setState({\n        text: e.target.value\n      });\n    };\n\n    this.onSubmitMessage = e => {\n      if (e.keyCode === 13 && e.shiftKey === false && /\\S/.test(this.state.text)) {\n        e.preventDefault();\n\n        if (this.checkIfSyllableExists(this.state.text, this.state.syllable)) {\n          this.context.emit('checkAnswer', this.state.text);\n        } else {\n          this.context.emit('wrongAnswer');\n        }\n      }\n    };\n\n    this.checkIfSyllableExists = (text, syllable) => {\n      if (text.length >= syllable.length) {\n        for (let index = 0; index < text.length; index++) {\n          if (text[index] === syllable[0]) {\n            for (let j = 1; j < syllable.length; j++) {\n              if (syllable[j] !== text[j]) break;\n              if (syllable.length - 1 === j) return true;\n            }\n          }\n        }\n      }\n\n      return false;\n    };\n\n    this.state = {\n      users: [],\n      user_names: [],\n      text: \"\",\n      syllable: \"\",\n      currentTime: 0\n    };\n  }\n\n  componentDidMount() {\n    disintegrate.init();\n\n    if (document.querySelector('[data-dis-type=\"self-contained\"]')) {\n      // If you do anything with dises, you need to wait for them to \n      // all finish loading\n      window.addEventListener(\"disesLoaded\", function () {\n        disintegrate.dises.forEach(function (disObj) {\n          if (disObj.elem.dataset.disType === \"self-contained\") {\n            disObj.container.addEventListener(\"click\", function (e) {\n              disObj.container.classList.add(\"animate\");\n            });\n            disObj.elem.addEventListener(\"disComplete\", function (e) {\n              disObj.container.classList.remove(\"animate\"); // Hack to reset the CSS animations\n              // see https://stackoverflow.com/a/6303311/2065702 for more info\n\n              resetCSSAnimation(disObj.container);\n              resetCSSAnimation(disObj.elem);\n            });\n\n            function resetCSSAnimation(el) {\n              el.style.animation = \"none\";\n              setTimeout(function () {\n                el.style.animation = \"\";\n              }, 10);\n            }\n          }\n        });\n\n        var ExplodeToRightParticle = function () {\n          this.name = \"ExplodeToRightParticle\";\n          this.animationDuration = 500; // in ms\n\n          this.speed = {\n            x: 0 + Math.random() * 6,\n            y: -1.5 + Math.random() * 3\n          };\n          this.radius = 0 + Math.random() * 5;\n          this.life = 30 + Math.random() * 10;\n          this.remainingLife = this.life;\n          this.firstRun = true;\n\n          this.draw = ctx => {\n            if (this.firstRun) {\n              this.firstRun = false;\n              this.startX += Math.random() * 20;\n            }\n\n            if (this.remainingLife > 0 && this.radius > 0) {\n              ctx.beginPath();\n              ctx.arc(this.startX, this.startY, this.radius, 0, Math.PI * 2);\n              ctx.fillStyle = \"rgba(\" + this.rgbArray[0] + ',' + this.rgbArray[1] + ',' + this.rgbArray[2] + \", 1)\";\n              ctx.fill();\n              this.remainingLife--;\n              this.radius -= 0.1;\n              this.startX += this.speed.x;\n              this.startY += this.speed.y;\n            }\n          };\n        };\n\n        disintegrate.addParticleType(ExplodeToRightParticle);\n\n        function genNormalizedVal() {\n          return (Math.random() + Math.random() + Math.random() + Math.random() + Math.random() + Math.random() - 3) / 3;\n        }\n\n        const EaseIn = power => t => Math.pow(t, power),\n              EaseOut = power => t => 1 - Math.abs(Math.pow(t - 1, power)),\n              EaseInOut = power => t => t < .5 ? EaseIn(power)(t * 2) / 2 : EaseOut(power)(t * 2 - 1) / 2 + 0.5;\n\n        var HollowCircles = function () {\n          this.name = \"HollowCircles\";\n          this.animationDuration = 1000; // in ms\n\n          this.widthScaler = Math.round(50 * genNormalizedVal()); // Normalized val between -50 and 50\n\n          this.numWaves = (genNormalizedVal() + 1 / 2) * 2 + 1;\n\n          this.xPosFunc = t => {\n            return Math.sin(this.numWaves * Math.PI * t);\n          };\n\n          this.heightScaler = Math.round(65 * (genNormalizedVal() + 1) / 2) + 10; // Normalized val between 10 and 75\n\n          this.yPosFunc = t => {\n            return t;\n          };\n\n          this.startRadius = 5 + Math.random() * 7;\n\n          this.sizeFunc = t => {\n            return 1 - t;\n          };\n\n          this.opacityFactor = Math.round((genNormalizedVal() + 1) / 2 * 3 + 1);\n\n          this.opacityFunc = t => {\n            return 1 - EaseInOut(this.opacityFactor)(t);\n          };\n\n          this.firstRun = true;\n\n          this.draw = (ctx, percent) => {\n            percent = percent >= 1 ? 1 : percent;\n\n            if (this.firstRun) {\n              this.firstRun = false;\n              this.startY += Math.random() * 20;\n            }\n\n            let currX = this.startX + this.xPosFunc(percent) * this.widthScaler;\n            let currY = this.startY - this.yPosFunc(percent) * this.heightScaler;\n            let radius = this.startRadius * this.sizeFunc(percent);\n            let currOpacity = this.opacityFunc(percent);\n            ctx.beginPath();\n            ctx.strokeStyle = \"rgba(\" + this.rgbArray[0] + ',' + this.rgbArray[1] + ',' + this.rgbArray[2] + ',' + currOpacity + \")\";\n            ctx.arc(currX, currY, radius, 0, Math.PI * 2);\n            ctx.stroke();\n          };\n        };\n\n        disintegrate.addParticleType(HollowCircles);\n      });\n    } // get balloon element\n\n\n    balloon_elm = document.getElementById('balloon'); // get input element\n\n    input_elm = document.getElementById('input');\n    this.context.on(\"user_joined_received\", data => {\n      this.setState({\n        users: data.users\n      });\n      this.setState({\n        user_names: this.getUserNames(data.users)\n      });\n    });\n    this.context.on('user_disconnect', data => {\n      this.removeDisconnectedUser(data.socket_id);\n    }); // gets syllable\n\n    this.context.on('Starting Game', data => {\n      this.setState({\n        currentTime: data.roundTime\n      });\n      setTimeout(function () {\n        data.room = data.room.substring(0, data.length - 1);\n        this.setState({\n          syllable: data.room\n        });\n      }.bind(this), 3500);\n      console.log(data.roundTime);\n      roundTimer = setInterval(this.timesUp, data.roundTime * 100);\n    });\n    this.context.on('Turn', () => {\n      this.userTurn();\n    }); // on socket user_animation\n\n    this.context.on('user_animated', data => {\n      this.userAnimation(data);\n    }); // update users input \n\n    this.context.on('updateTextInputs', data => {\n      this.changeTextValueByID(data.id, data.value);\n    });\n    this.context.on('correctAnswer', data => {\n      data = data.substring(0, data.length - 1);\n      this.correctAnswer(data);\n    });\n    this.context.on('incorrectAnswer', () => this.incorrectAnswer());\n  }\n\n  getUserNames(data) {\n    let user_names = [];\n\n    for (var i = 0; i < data.length; i++) {\n      let id = data[i].socket_id;\n      let name = data[i].name;\n      let text = \"\";\n      const user = {\n        id: id,\n        name: name,\n        text: text\n      };\n      user_names.push(user);\n    }\n\n    return user_names;\n  }\n\n  removeDisconnectedUser(id) {\n    let users = this.state.users;\n    let user_names = this.state.user_names;\n\n    for (var i = 0; i < users.length; i++) {\n      if (users[i].socket_id === id) {\n        users.splice(i, 1);\n        user_names.splice(i, 1);\n        continue;\n      }\n    }\n\n    this.setState({\n      users: users,\n      user_names: user_names\n    });\n  }\n\n  correctAnswer(syllable) {\n    this.setState({\n      text: \"\",\n      syllable: syllable\n    });\n    this.changeTextValueByID(this.context.id, \"\");\n    const data = {\n      id: this.context.id,\n      value: \"\"\n    };\n    this.context.emit('changedTextValue', data); // checks if current turn \n\n    current_user.style.animation = '';\n    input_elm.hidden = true;\n  }\n\n  incorrectAnswer() {\n    balloon_elm.style.animation = '';\n    balloon_elm.style.animation = 'shake 0.5s infinite';\n    setTimeout(function () {\n      balloon_elm.style.animation = 'shake 4s infinite';\n    }, 500);\n  }\n\n  timesUp() {\n    balloon_elm.classList.add(\"bounceOutDown-animation\");\n    clearInterval(roundTimer);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Balloon-Party\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Game\",\n        id: \"game\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"syllable-txt\",\n          children: this.state.syllable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-dis-type\": \"self-contained\",\n          \"data-dis-particle-type\": \"ExplodingParticle\",\n          \"data-dis-reduction-factor\": \"100\",\n          \"data-dis-color\": \"[90, 169, 235]\",\n          className: \"balloon\",\n          id: \"balloon\",\n          src: waterballoon,\n          alt: \"Balloon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"users\",\n          children: this.state.user_names && this.state.user_names.map(user => {\n            return /*#__PURE__*/_jsxDEV(User, {\n              id: user.id,\n              name: user.name,\n              text: user.text\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"input\",\n          className: \"input-answer\",\n          hidden: true,\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"\\u05D4\\u05E7\\u05DC\\u05D3/\\u05D9 \\u05EA\\u05E9\\u05D5\\u05D1\\u05D4\",\n            \"data-placeholder-text\": \"typeheretoanswer\",\n            maxLength: \"40\",\n            value: this.state.text,\n            onChange: this.handleChange,\n            onKeyDown: this.onSubmitMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nGame.contextType = SocketContext;","map":{"version":3,"sources":["C:/MERN Projects/BombParty/bombparty/client/src/components/Game/Game.js"],"names":["React","Component","socket","SocketContext","waterballoon","User","disintegrate","balloon_elm","input_elm","current_user","roundTimer","Game","constructor","changeTextValueByID","id","text","index","state","user_names","length","duplicate","setState","userTurn","setTimeout","hidden","emit","context","userAnimation","data","user_elm_prev","document","getElementById","style","animation","animationDuration","handleChange","e","target","value","onSubmitMessage","keyCode","shiftKey","test","preventDefault","checkIfSyllableExists","syllable","j","users","currentTime","componentDidMount","init","querySelector","window","addEventListener","dises","forEach","disObj","elem","dataset","disType","container","classList","add","remove","resetCSSAnimation","el","ExplodeToRightParticle","name","speed","x","Math","random","y","radius","life","remainingLife","firstRun","draw","ctx","startX","beginPath","arc","startY","PI","fillStyle","rgbArray","fill","addParticleType","genNormalizedVal","EaseIn","power","t","pow","EaseOut","abs","EaseInOut","HollowCircles","widthScaler","round","numWaves","xPosFunc","sin","heightScaler","yPosFunc","startRadius","sizeFunc","opacityFactor","opacityFunc","percent","currX","currY","currOpacity","strokeStyle","stroke","on","getUserNames","removeDisconnectedUser","socket_id","roundTime","room","substring","bind","console","log","setInterval","timesUp","correctAnswer","incorrectAnswer","i","user","push","splice","clearInterval","render","map","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport './Game.css'\r\nimport {socket, SocketContext} from '../../components/context/socket'\r\nimport waterballoon from './assets/waterballoon.png'\r\nimport User from './Users/User';\r\nimport disintegrate from 'disintegrate'\r\nvar balloon_elm, input_elm,current_user, roundTimer;\r\n\r\nexport default class Game extends Component {\r\n    static contextType = SocketContext;\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            users: [],\r\n            user_names: [],\r\n            text: \"\",\r\n            syllable: \"\",\r\n            currentTime: 0,\r\n          };\r\n    }\r\n    \r\n    componentDidMount(){\r\n        \r\n        disintegrate.init();\r\n\r\n        if(document.querySelector('[data-dis-type=\"self-contained\"]')) {\r\n          // If you do anything with dises, you need to wait for them to \r\n          // all finish loading\r\n          window.addEventListener(\"disesLoaded\", function() {\r\n            disintegrate.dises.forEach(function(disObj) {\r\n              if(disObj.elem.dataset.disType === \"self-contained\") {\r\n                disObj.container.addEventListener(\"click\", function(e) {\r\n                  disObj.container.classList.add(\"animate\");\r\n                });\r\n                disObj.elem.addEventListener(\"disComplete\", function(e) {\r\n                  disObj.container.classList.remove(\"animate\");\r\n                  // Hack to reset the CSS animations\r\n                  // see https://stackoverflow.com/a/6303311/2065702 for more info\r\n                  resetCSSAnimation(disObj.container);\r\n                  resetCSSAnimation(disObj.elem);\r\n                });\r\n                function resetCSSAnimation(el) {\r\n                  el.style.animation = \"none\";\r\n                  setTimeout(function() {\r\n                      el.style.animation = \"\";\r\n                  }, 10);\r\n                }\r\n              }\r\n            });\r\n        \r\n        \r\n            var ExplodeToRightParticle = function() {\r\n              this.name = \"ExplodeToRightParticle\";\r\n              this.animationDuration = 500; // in ms\r\n        \r\n              this.speed = {\r\n                x: 0 + Math.random() * 6,\r\n                y: -1.5 + Math.random() * 3\r\n              };\r\n              this.radius = 0 + Math.random() * 5;\r\n              this.life = 30 + Math.random() * 10;\r\n              this.remainingLife = this.life;\r\n        \r\n              this.firstRun = true;\r\n              this.draw = ctx => {\r\n                if(this.firstRun) {\r\n                  this.firstRun = false;\r\n                  this.startX += Math.random() * 20;\r\n                }\r\n        \r\n                if(this.remainingLife > 0\r\n                && this.radius > 0) {\r\n                  ctx.beginPath();\r\n                  ctx.arc(this.startX, this.startY, this.radius, 0, Math.PI * 2);\r\n                  ctx.fillStyle = \"rgba(\" + this.rgbArray[0] + ',' + this.rgbArray[1] + ',' + this.rgbArray[2] + \", 1)\";\r\n                  ctx.fill();\r\n                  this.remainingLife--;\r\n                  this.radius -= 0.1;\r\n                  this.startX += this.speed.x;\r\n                  this.startY += this.speed.y;\r\n                }\r\n              }\r\n            }\r\n            disintegrate.addParticleType(ExplodeToRightParticle);\r\n        \r\n        \r\n            function genNormalizedVal() {\r\n              return ((Math.random() + Math.random() + Math.random() + Math.random() + Math.random() + Math.random() - 3)) / 3;\r\n            }\r\n        \r\n            const EaseIn    = power => t => Math.pow(t, power),\r\n                  EaseOut   = power => t => 1 - Math.abs(Math.pow(t-1, power)),\r\n                  EaseInOut = power => t => t<.5 ? EaseIn(power)(t*2)/2 : EaseOut(power)(t*2 - 1)/2+0.5;\r\n            var HollowCircles = function() {\r\n              this.name = \"HollowCircles\";\r\n              this.animationDuration = 1000; // in ms\r\n        \r\n              this.widthScaler = Math.round(50 * genNormalizedVal()); // Normalized val between -50 and 50\r\n              this.numWaves = (genNormalizedVal() + 1 / 2) * 2 + 1;\r\n              this.xPosFunc = t => { return Math.sin(this.numWaves * Math.PI * t); }; \r\n        \r\n              this.heightScaler = Math.round(65 * (genNormalizedVal() + 1) / 2) + 10; // Normalized val between 10 and 75\r\n              this.yPosFunc = t => { return t; }; \r\n              \r\n              this.startRadius = 5 + Math.random() * 7;\r\n              this.sizeFunc = t => { return 1 - t; };\r\n        \r\n              this.opacityFactor = Math.round(((genNormalizedVal() + 1) / 2) * 3 + 1);\r\n              this.opacityFunc = t => { return 1 - EaseInOut(this.opacityFactor)(t); };\r\n              \r\n              this.firstRun = true;\r\n        \r\n              this.draw = (ctx, percent) => {\r\n                percent = percent >= 1 ? 1 : percent;\r\n        \r\n                if(this.firstRun) {\r\n                  this.firstRun = false;\r\n                  this.startY += Math.random() * 20;\r\n                }\r\n        \r\n                let currX = this.startX + this.xPosFunc(percent) * this.widthScaler;\r\n                let currY = this.startY - this.yPosFunc(percent) * this.heightScaler;\r\n                let radius = this.startRadius * this.sizeFunc(percent);\r\n                let currOpacity = this.opacityFunc(percent);\r\n        \r\n                ctx.beginPath();\r\n                ctx.strokeStyle = \"rgba(\" + this.rgbArray[0] + ',' + this.rgbArray[1] + ',' + this.rgbArray[2] + ',' + currOpacity + \")\";\r\n                ctx.arc(currX, currY, radius, 0, Math.PI * 2);\r\n                ctx.stroke();\r\n              };\r\n            };\r\n            disintegrate.addParticleType(HollowCircles);\r\n          });\r\n        }\r\n\r\n\r\n        // get balloon element\r\n        balloon_elm = document.getElementById('balloon');\r\n        // get input element\r\n        input_elm = document.getElementById('input');\r\n\r\n        this.context.on(\"user_joined_received\", data => {\r\n            this.setState({users:data.users})\r\n            this.setState({user_names: this.getUserNames(data.users)})\r\n        })\r\n        this.context.on('user_disconnect',(data) => {this.removeDisconnectedUser(data.socket_id)})\r\n\r\n        // gets syllable\r\n        this.context.on('Starting Game', (data) => {\r\n            this.setState({currentTime: data.roundTime});\r\n            setTimeout(function () {data.room = data.room.substring(0, data.length - 1); this.setState({syllable:data.room})}.bind(this),3500)\r\n            console.log(data.roundTime);\r\n            roundTimer = setInterval(this.timesUp, data.roundTime*100);\r\n        })\r\n        this.context.on('Turn', () => {this.userTurn()})\r\n        // on socket user_animation\r\n        this.context.on('user_animated', (data) => {this.userAnimation(data)})\r\n        // update users input \r\n        this.context.on('updateTextInputs', (data) => {this.changeTextValueByID(data.id,data.value)})\r\n        this.context.on('correctAnswer', (data) => {data = data.substring(0, data.length - 1); this.correctAnswer(data)})\r\n        this.context.on('incorrectAnswer', () => this.incorrectAnswer())\r\n\r\n    }\r\n    getUserNames(data) {\r\n        let user_names = [];\r\n        for (var i = 0; i < data.length; i++) {\r\n                let id = data[i].socket_id;\r\n                let name = data[i].name;\r\n                let text = \"\";\r\n                const user = {id: id,name: name, text: text}\r\n                user_names.push(user);\r\n            }\r\n        return user_names;\r\n    }\r\n     removeDisconnectedUser(id) {\r\n        let users = this.state.users;\r\n        let user_names = this.state.user_names;\r\n        for (var i = 0; i < users.length; i++) {\r\n          if (users[i].socket_id === id) {\r\n              users.splice(i,1)\r\n              user_names.splice(i,1)\r\n              continue\r\n          }\r\n        }\r\n        this.setState({\r\n            users: users,\r\n            user_names: user_names\r\n        })\r\n    }\r\n    changeTextValueByID = (id,text) =>  {\r\n        for (let index = 0; index < this.state.user_names.length; index++) {\r\n            if(this.state.user_names[index]['id'] === id)\r\n            {\r\n                let duplicate = this.state.user_names;\r\n                duplicate[index]['text'] = text;\r\n                this.setState({user_names: duplicate});\r\n            }\r\n        }\r\n\r\n    }\r\n    //handles user turn\r\n    userTurn = () => {\r\n        setTimeout(function () {input_elm.hidden = false;},500)\r\n        socket.emit('user_animation', this.context.id);\r\n    }\r\n    // handles user animation\r\n    userAnimation = (data) => {\r\n        if(input_elm.hidden === true) \r\n        {\r\n            let user_elm_prev = document.getElementById(this.context.id);\r\n            user_elm_prev.style.animation='';\r\n        }\r\n        current_user = document.getElementById(data);\r\n        current_user.style.animation='heartBeat infinite';\r\n        current_user.style.animationDuration='2s';\r\n    }\r\n    // handles on answer change input\r\n    handleChange = (e) => {\r\n        this.changeTextValueByID(this.context.id,e.target.value);\r\n        const data = {id : this.context.id, value : e.target.value}\r\n        this.context.emit('changedTextValue',data)\r\n        this.setState({text: e.target.value})\r\n    }\r\n    // submits answer\r\n    onSubmitMessage = (e) => {\r\n        if(e.keyCode === 13 && e.shiftKey === false && (/\\S/.test(this.state.text))) {\r\n            e.preventDefault();\r\n            if (this.checkIfSyllableExists(this.state.text,this.state.syllable))\r\n            {\r\n            this.context.emit('checkAnswer',this.state.text);\r\n            }\r\n            else\r\n            {\r\n             this.context.emit('wrongAnswer');\r\n            }\r\n          }\r\n        }\r\n        // hebrew includes function, can't use js includes\r\n        checkIfSyllableExists= (text,syllable) => {\r\n            if(text.length >= syllable.length)\r\n            {\r\n            for (let index = 0; index < text.length; index++) {\r\n                if(text[index] === syllable[0])\r\n                {\r\n                    for (let j = 1; j < syllable.length; j++) {\r\n                        if(syllable[j] !== text[j]) break;\r\n                        if(syllable.length-1 === j)\r\n                            return true;\r\n                    }\r\n                }                \r\n            }\r\n        }\r\n        return false;\r\n        }\r\n        correctAnswer (syllable) {\r\n            this.setState({text: \"\",syllable:syllable});\r\n            this.changeTextValueByID(this.context.id,\"\");\r\n            const data = {id : this.context.id, value : \"\"}\r\n            this.context.emit('changedTextValue',data)\r\n            // checks if current turn \r\n            current_user.style.animation='';\r\n            input_elm.hidden = true;\r\n        }\r\n        incorrectAnswer () {\r\n            balloon_elm.style.animation='';\r\n            balloon_elm.style.animation='shake 0.5s infinite';\r\n            setTimeout(function () {balloon_elm.style.animation='shake 4s infinite';},500)\r\n        }\r\n        timesUp () {\r\n            balloon_elm.classList.add(\"bounceOutDown-animation\")\r\n            clearInterval(roundTimer);\r\n        }\r\n        \r\n    render() {\r\n        return (\r\n            <div className=\"Balloon-Party\">\r\n\r\n            <div className=\"Game\" id=\"game\"> \r\n                <span className=\"syllable-txt\">{this.state.syllable}</span>\r\n                <img data-dis-type=\"self-contained\" data-dis-particle-type=\"ExplodingParticle\" data-dis-reduction-factor=\"100\" data-dis-color=\"[90, 169, 235]\" className=\"balloon\" id=\"balloon\" src={waterballoon} alt=\"Balloon\"/>\r\n                <div className=\"users\">\r\n\r\n                { this.state.user_names && this.state.user_names.map(user  => {\r\n                return <User key={user.id} id={user.id} name={user.name}  text={user.text} />;\r\n        })}\r\n                </div>\r\n                <div id=\"input\" className=\"input-answer\" hidden>\r\n                <textarea placeholder=\"הקלד/י תשובה\" data-placeholder-text=\"typeheretoanswer\" maxLength=\"40\" value={this.state.text} onChange={this.handleChange} onKeyDown={this.onSubmitMessage} ></textarea>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n        }\r\n"]},"metadata":{},"sourceType":"module"}