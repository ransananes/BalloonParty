{"ast":null,"code":"var _jsxFileName = \"C:\\\\MERN Projects\\\\BombParty\\\\bombparty\\\\client\\\\src\\\\components\\\\Chat\\\\Messages\\\\Message.js\";\nimport React, { Component } from 'react';\nimport TextMessage from './TextMessage';\nimport ConnectionMessage from './ConnectionMessage';\nimport './styles/Message.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Message extends Component {\n  _renderMessageOfType(type) {\n    switch (type) {\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(TextMessage, { ...this.props.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 14\n        }, this);\n\n      case 'connection':\n        return /*#__PURE__*/_jsxDEV(ConnectionMessage, { ...this.props.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 14\n        }, this);\n\n      default:\n        console.error(`Attempting to load message with unsupported file type '${type}'`);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      style: this.props.message.type === \"text\" ? {\n        color: '#ffffff',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-around'\n      } : {\n        color: 'rgb(144, 153, 238)'\n      },\n      children: [this._renderMessageOfType(this.props.message.type), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"name\",\n        dir: \"auto\",\n        children: this.props.message.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"time\",\n        dir: \"auto\",\n        children: [\"  \", this.props.message.time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Message;","map":{"version":3,"sources":["C:/MERN Projects/BombParty/bombparty/client/src/components/Chat/Messages/Message.js"],"names":["React","Component","TextMessage","ConnectionMessage","Message","_renderMessageOfType","type","props","message","console","error","render","color","width","display","justifyContent","name","time"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAO,sBAAP;;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAE9BI,EAAAA,oBAAoB,CAACC,IAAD,EAAO;AACzB,YAAOA,IAAP;AACA,WAAK,MAAL;AACE,4BAAO,QAAC,WAAD,OAAiB,KAAKC,KAAL,CAAWC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF,WAAK,YAAL;AACE,4BAAO,QAAC,iBAAD,OAAuB,KAAKD,KAAL,CAAWC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF;AACEC,QAAAA,OAAO,CAACC,KAAR,CAAe,0DAAyDJ,IAAK,GAA7E;AANF;AAQD;;AAEDK,EAAAA,MAAM,GAAI;AACR,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,OAAX,CAAmBF,IAAnB,KAA4B,MAA5B,GAAqC;AAACM,QAAAA,KAAK,EAAE,SAAR;AAAmBC,QAAAA,KAAK,EAAE,MAA1B;AAAiCC,QAAAA,OAAO,EAAE,MAA1C;AAAiDC,QAAAA,cAAc,EAAE;AAAjE,OAArC,GAAwH;AAACH,QAAAA,KAAK,EAAE;AAAR,OAAxJ;AAAA,iBACK,KAAKP,oBAAL,CAA0B,KAAKE,KAAL,CAAWC,OAAX,CAAmBF,IAA7C,CADL,eAEE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,GAAG,EAAC,MAA3B;AAAA,kBAAmC,KAAKC,KAAL,CAAWC,OAAX,CAAmBQ;AAAtD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGI;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,GAAG,EAAC,MAA3B;AAAA,yBAAqC,KAAKT,KAAL,CAAWC,OAAX,CAAmBS,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AArB6B;;AAwBhC,eAAeb,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport TextMessage from './TextMessage';\nimport ConnectionMessage from './ConnectionMessage';\nimport './styles/Message.css';\n\nclass Message extends Component {\n\n  _renderMessageOfType(type) {\n    switch(type) {\n    case 'text':\n      return <TextMessage {...this.props.message} />;\n    case 'connection':\n      return <ConnectionMessage {...this.props.message} />;\n    default:\n      console.error(`Attempting to load message with unsupported file type '${type}'`);\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"message\" style={this.props.message.type === \"text\" ? {color: '#ffffff', width: '100%',display: 'flex',justifyContent: 'space-around'} : {color: 'rgb(144, 153, 238)'}}>\n          {this._renderMessageOfType(this.props.message.type)}\n        <span className=\"name\" dir=\"auto\">{this.props.message.name}</span>\n          <span className=\"time\" dir=\"auto\">  {this.props.message.time}</span>\n        </div>\n      );\n  }\n}\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}