{"ast":null,"code":"var _jsxFileName = \"C:\\\\MERN Projects\\\\BombParty\\\\bombparty\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React from 'react';\nimport { SocketContext } from '../context/socket';\nimport Message from './Messages/Message';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chat extends React.Component {\n  constructor() {\n    super();\n    this.nickname = JSON.parse(localStorage.getItem('settings')).nickname;\n    this.currentDate = new Date();\n\n    this.gameStartMessage = seconds => {\n      const gameStartInterval = setInterval(() => {\n        if (seconds > 0) {\n          const message = {\n            time: seconds,\n            type: 'gameStart'\n          };\n          this.setState({\n            messageList: [...this.state.messageList, message]\n          });\n        } // clears on game start\n        else {\n          clearInterval(gameStartInterval);\n          const message = {\n            time: 0,\n            type: 'gameStart'\n          };\n          this.setState({\n            messageList: [...this.state.messageList, message]\n          });\n        }\n\n        seconds--;\n      }, 1000);\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        text: e.target.value\n      });\n    };\n\n    this.onSubmitMessage = e => {\n      if (e.keyCode === 13 && e.shiftKey === false && /\\S/.test(this.state.text)) {\n        e.preventDefault();\n        const data = {\n          name: this.nickname,\n          time: this.currentDate.timeNow(),\n          type: \"text\",\n          text: this.state.text\n        };\n        this.context.emit('message', data); // add message and reset input\n\n        this.setState({\n          messageList: [...this.state.messageList, data],\n          text: \"\"\n        });\n      }\n    };\n\n    this.state = {\n      text: \"\",\n      messageList: [],\n      chatStatus: false\n    }; // eslint-disable-next-line \n\n    Date.prototype.timeNow = function () {\n      return (this.getHours() < 10 ? \"0\" : \"\") + this.getHours() + \":\" + (this.getMinutes() < 10 ? \"0\" : \"\") + this.getMinutes();\n    };\n  }\n\n  componentDidMount() {\n    const message = {\n      name: this.nickname,\n      time: this.currentDate.timeNow(),\n      type: 'connection'\n    }; // on user connection to chat\n\n    this.context.on('user_connected', () => {\n      this.context.emit('user_joined_sent', message);\n    });\n    this.context.on('user_joined_received', data => {\n      this.setState({\n        messageList: [...this.state.messageList, data.data_msg]\n      });\n    });\n    this.context.on('user_disconnect', data => {\n      const message = {\n        name: data.user_name,\n        time: this.currentDate.timeNow(),\n        type: 'disconnection'\n      }; //ðŸ’¥ ðŸŒŠ\n\n      this.setState({\n        messageList: [...this.state.messageList, message]\n      });\n    }); // on message received\n\n    this.context.on('message_received', data => {\n      this.setState({\n        messageList: [...this.state.messageList, data]\n      });\n    }); // starts game \n\n    this.context.on('Starting Game', () => this.gameStartMessage(3));\n  } // handle game Start message\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Chat\",\n      style: this.state.chatStatus === false ? {\n        display: 'flex'\n      } : {\n        width: '5%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chat-option\",\n        onClick: () => this.setState({\n          chatStatus: !this.state.chatStatus\n        }),\n        children: [\" \", String.fromCharCode(8592)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        style: this.state.chatStatus === false ? {\n          display: 'flex'\n        } : {\n          display: 'none'\n        },\n        children: this.state.messageList.map((message, i) => {\n          return /*#__PURE__*/_jsxDEV(Message, {\n            message: message\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"\\u05D4\\u05E7\\u05DC\\u05D3/\\u05D9 \\u05D4\\u05D5\\u05D3\\u05E2\\u05D4\",\n          \"data-placeholder-text\": \"typeHereToChat\",\n          maxLength: \"40\",\n          value: this.state.text,\n          onChange: this.handleChange,\n          onKeyDown: this.onSubmitMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nChat.contextType = SocketContext;\nexport default Chat;","map":{"version":3,"sources":["C:/MERN Projects/BombParty/bombparty/client/src/components/Chat/Chat.js"],"names":["React","SocketContext","Message","Chat","Component","constructor","nickname","JSON","parse","localStorage","getItem","currentDate","Date","gameStartMessage","seconds","gameStartInterval","setInterval","message","time","type","setState","messageList","state","clearInterval","handleChange","e","text","target","value","onSubmitMessage","keyCode","shiftKey","test","preventDefault","data","name","timeNow","context","emit","chatStatus","prototype","getHours","getMinutes","componentDidMount","on","data_msg","user_name","render","display","width","String","fromCharCode","map","i","contextType"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { SocketContext } from '../context/socket';\r\nimport Message from './Messages/Message'\r\nimport './Chat.css'\r\n\r\nclass Chat extends React.Component {\r\n    static contextType = SocketContext;\r\n    nickname = JSON.parse(localStorage.getItem('settings')).nickname;\r\n    currentDate = new Date();\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n          text: \"\",\r\n          messageList: [],\r\n          chatStatus: false,\r\n        };\r\n    // eslint-disable-next-line \r\n    Date.prototype.timeNow = function () {\r\n        return ((this.getHours() < 10)?\"0\":\"\") + this.getHours() +\":\"+ ((this.getMinutes() < 10)?\"0\":\"\") + this.getMinutes();\r\n        }        \r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const message = {\r\n            name : this.nickname,\r\n            time : this.currentDate.timeNow(),\r\n            type: 'connection',\r\n        }\r\n    // on user connection to chat\r\n    this.context.on('user_connected',() => {\r\n        this.context.emit('user_joined_sent',message);\r\n    })\r\n\r\n    this.context.on('user_joined_received', (data) => {\r\n        this.setState({messageList: [...this.state.messageList, data.data_msg]})\r\n    }) \r\n    this.context.on('user_disconnect',(data) => {\r\n            const message = {\r\n                name : data.user_name,\r\n                time : this.currentDate.timeNow(),\r\n                type: 'disconnection',\r\n            }\r\n            //ðŸ’¥ ðŸŒŠ\r\n            this.setState({messageList: [...this.state.messageList, message]})\r\n            }) \r\n    // on message received\r\n    this.context.on('message_received',data => { \r\n        this.setState({messageList: [...this.state.messageList, data]})\r\n    })\r\n    // starts game \r\n    this.context.on('Starting Game', () => this.gameStartMessage(3));\r\n}\r\n        // handle game Start message\r\n    gameStartMessage = (seconds) => {\r\n        const gameStartInterval = setInterval(()=>{\r\n            if(seconds > 0)\r\n            {\r\n            const message = {\r\n                time: seconds,\r\n                type: 'gameStart',\r\n            }\r\n            this.setState({messageList: [...this.state.messageList, message]});\r\n        }\r\n            // clears on game start\r\n            else\r\n            {\r\n                clearInterval(gameStartInterval);\r\n                const message = {\r\n                    time:0,\r\n                    type: 'gameStart',\r\n                }\r\n                this.setState({messageList: [...this.state.messageList, message]});\r\n            }\r\n            seconds--;\r\n         }, 1000);\r\n    }\r\n    // handles on change input\r\n    handleChange = (e) => {\r\n        this.setState({text: e.target.value})\r\n    }\r\n    onSubmitMessage = (e) => {\r\n        if(e.keyCode === 13 && e.shiftKey === false && (/\\S/.test(this.state.text))) {\r\n            e.preventDefault();\r\n            const data = {\r\n                name : this.nickname,\r\n                time : this.currentDate.timeNow(),\r\n                type: \"text\",\r\n                text: this.state.text\r\n            };\r\n            this.context.emit('message',data);\r\n            // add message and reset input\r\n            this.setState({messageList: [...this.state.messageList, data], text: \"\"})\r\n          }\r\n        }\r\n    render() {\r\n    return (\r\n        <div className=\"Chat\" style={this.state.chatStatus === false ? {display: 'flex'} : {width:'5%'}}>\r\n            <button className=\"chat-option\" onClick={() => this.setState({chatStatus: !this.state.chatStatus})}> {String.fromCharCode(8592)}</button>\r\n        <div className=\"messages\" style={this.state.chatStatus === false ? {display: 'flex'} : {display:'none'}}>\r\n        {this.state.messageList.map((message, i) => {\r\n          return <Message message={message} key={i} />;\r\n        })}\r\n        </div>\r\n            <div className=\"input\">\r\n            <textarea placeholder=\"×”×§×œ×“/×™ ×”×•×“×¢×”\" data-placeholder-text=\"typeHereToChat\" maxLength=\"40\" value={this.state.text} onChange={this.handleChange} onKeyDown={this.onSubmitMessage} ></textarea>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n    \r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}