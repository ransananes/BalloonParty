{"ast":null,"code":"var _jsxFileName = \"C:\\\\MERN Projects\\\\BombParty\\\\bombparty\\\\client\\\\src\\\\components\\\\Game\\\\Game.js\";\nimport React, { Component } from 'react';\nimport './Game.css';\nimport { socket, SocketContext } from '../../components/context/socket';\nimport waterballoon from './assets/waterballoon.png';\nimport User from './Users/User';\nimport disintegrate from 'disintegrate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar balloon_elm, input_elm, current_user, roundTimer;\nexport default class Game extends Component {\n  constructor() {\n    super();\n\n    this.changeTextValueByID = (id, text) => {\n      for (let index = 0; index < this.state.user_names.length; index++) {\n        if (this.state.user_names[index]['id'] === id) {\n          let duplicate = this.state.user_names;\n          duplicate[index]['text'] = text;\n          this.setState({\n            user_names: duplicate\n          });\n        }\n      }\n    };\n\n    this.userTurn = () => {\n      setTimeout(function () {\n        input_elm.hidden = false;\n      }, 500);\n      socket.emit('user_animation', this.context.id);\n    };\n\n    this.userAnimation = data => {\n      if (input_elm.hidden === true) {\n        let user_elm_prev = document.getElementById(this.context.id);\n        user_elm_prev.style.animation = '';\n      }\n\n      current_user = document.getElementById(data);\n      current_user.style.animation = 'heartBeat infinite';\n      current_user.style.animationDuration = '2s';\n    };\n\n    this.handleChange = e => {\n      this.changeTextValueByID(this.context.id, e.target.value);\n      const data = {\n        id: this.context.id,\n        value: e.target.value\n      };\n      this.context.emit('changedTextValue', data);\n      this.setState({\n        text: e.target.value\n      });\n    };\n\n    this.onSubmitMessage = e => {\n      if (e.keyCode === 13 && e.shiftKey === false && /\\S/.test(this.state.text)) {\n        e.preventDefault();\n\n        if (this.checkIfSyllableExists(this.state.text, this.state.syllable)) {\n          this.context.emit('checkAnswer', this.state.text);\n        } else {\n          this.context.emit('wrongAnswer');\n        }\n      }\n    };\n\n    this.checkIfSyllableExists = (text, syllable) => {\n      if (text.length >= syllable.length) {\n        for (let index = 0; index < text.length; index++) {\n          if (text[index] === syllable[0]) {\n            for (let j = 1; j < syllable.length; j++) {\n              if (syllable[j] !== text[j]) break;\n              if (syllable.length - 1 === j) return true;\n            }\n          }\n        }\n      }\n\n      return false;\n    };\n\n    this.state = {\n      users: [],\n      user_names: [],\n      text: \"\",\n      syllable: \"\",\n      currentTime: 0\n    };\n  }\n\n  componentDidMount() {\n    // get balloon element\n    balloon_elm = document.getElementById('balloon'); // get input element\n\n    input_elm = document.getElementById('input');\n    disintegrate.init([{\n      elem: balloon_elm,\n      data: {\n        disType: \"simultaneous\",\n        disParticleType: \"ExplodingParticle\",\n        disReductionFactor: 111\n      }\n    }]);\n    this.context.on(\"user_joined_received\", data => {\n      this.setState({\n        users: data.users\n      });\n      this.setState({\n        user_names: this.getUserNames(data.users)\n      });\n    });\n    this.context.on('user_disconnect', data => {\n      this.removeDisconnectedUser(data.socket_id);\n    }); // gets syllable\n\n    this.context.on('Starting Game', data => {\n      this.setState({\n        currentTime: data.roundTime\n      });\n      setTimeout(function () {\n        data.room = data.room.substring(0, data.length - 1);\n        this.setState({\n          syllable: data.room\n        });\n      }.bind(this), 3500);\n      console.log(data.roundTime);\n      roundTimer = setInterval(this.timesUp, data.roundTime * 100);\n    });\n    this.context.on('Turn', () => {\n      this.userTurn();\n    }); // on socket user_animation\n\n    this.context.on('user_animated', data => {\n      this.userAnimation(data);\n    }); // update users input \n\n    this.context.on('updateTextInputs', data => {\n      this.changeTextValueByID(data.id, data.value);\n    });\n    this.context.on('correctAnswer', data => {\n      data = data.substring(0, data.length - 1);\n      this.correctAnswer(data);\n    });\n    this.context.on('incorrectAnswer', () => this.incorrectAnswer());\n  }\n\n  getUserNames(data) {\n    let user_names = [];\n\n    for (var i = 0; i < data.length; i++) {\n      let id = data[i].socket_id;\n      let name = data[i].name;\n      let text = \"\";\n      const user = {\n        id: id,\n        name: name,\n        text: text\n      };\n      user_names.push(user);\n    }\n\n    return user_names;\n  }\n\n  removeDisconnectedUser(id) {\n    let users = this.state.users;\n    let user_names = this.state.user_names;\n\n    for (var i = 0; i < users.length; i++) {\n      if (users[i].socket_id === id) {\n        users.splice(i, 1);\n        user_names.splice(i, 1);\n        continue;\n      }\n    }\n\n    this.setState({\n      users: users,\n      user_names: user_names\n    });\n  }\n\n  correctAnswer(syllable) {\n    this.setState({\n      text: \"\",\n      syllable: syllable\n    });\n    this.changeTextValueByID(this.context.id, \"\");\n    const data = {\n      id: this.context.id,\n      value: \"\"\n    };\n    this.context.emit('changedTextValue', data); // checks if current turn \n\n    current_user.style.animation = '';\n    input_elm.hidden = true;\n  }\n\n  incorrectAnswer() {\n    balloon_elm.style.animation = '';\n    balloon_elm.style.animation = 'shake 0.5s infinite';\n    setTimeout(function () {\n      balloon_elm.style.animation = 'shake 4s infinite';\n    }, 500);\n  }\n\n  timesUp() {\n    console.log(\"LALA\");\n    balloon_elm.style.opacity = 0;\n    balloon_elm.style.transform = 'scale(5) rotate(30deg)';\n    balloon_elm.style.mozTransform = 'scale(5) rotate(30deg)';\n    balloon_elm.style.webkitTransform = 'scale(5) rotate(30deg)';\n    balloon_elm.style.oTransform = 'scale(5) rotate(30deg)';\n    clearInterval(roundTimer);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Balloon-Party\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Game\",\n        id: \"game\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"syllable-txt\",\n          children: this.state.syllable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-dis-type\": \"self-contained\",\n          \"data-dis-particle-type\": \"ExplodingParticle\",\n          \"data-dis-reduction-factor\": \"100\",\n          \"data-dis-color\": \"[90, 169, 235]\",\n          className: \"balloon\",\n          id: \"balloon\",\n          src: waterballoon,\n          alt: \"Balloon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"users\",\n          children: this.state.user_names && this.state.user_names.map(user => {\n            return /*#__PURE__*/_jsxDEV(User, {\n              id: user.id,\n              name: user.name,\n              text: user.text\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"input\",\n          className: \"input-answer\",\n          hidden: true,\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"\\u05D4\\u05E7\\u05DC\\u05D3/\\u05D9 \\u05EA\\u05E9\\u05D5\\u05D1\\u05D4\",\n            \"data-placeholder-text\": \"typeheretoanswer\",\n            maxLength: \"40\",\n            value: this.state.text,\n            onChange: this.handleChange,\n            onKeyDown: this.onSubmitMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nGame.contextType = SocketContext;","map":{"version":3,"sources":["C:/MERN Projects/BombParty/bombparty/client/src/components/Game/Game.js"],"names":["React","Component","socket","SocketContext","waterballoon","User","disintegrate","balloon_elm","input_elm","current_user","roundTimer","Game","constructor","changeTextValueByID","id","text","index","state","user_names","length","duplicate","setState","userTurn","setTimeout","hidden","emit","context","userAnimation","data","user_elm_prev","document","getElementById","style","animation","animationDuration","handleChange","e","target","value","onSubmitMessage","keyCode","shiftKey","test","preventDefault","checkIfSyllableExists","syllable","j","users","currentTime","componentDidMount","init","elem","disType","disParticleType","disReductionFactor","on","getUserNames","removeDisconnectedUser","socket_id","roundTime","room","substring","bind","console","log","setInterval","timesUp","correctAnswer","incorrectAnswer","i","name","user","push","splice","opacity","transform","mozTransform","webkitTransform","oTransform","clearInterval","render","map","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,YAAP;AACA,SAAQC,MAAR,EAAgBC,aAAhB,QAAoC,iCAApC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,YAAP,MAAyB,cAAzB;;AACA,IAAIC,WAAJ,EAAiBC,SAAjB,EAA2BC,YAA3B,EAAyCC,UAAzC;AAEA,eAAe,MAAMC,IAAN,SAAmBV,SAAnB,CAA6B;AAExCW,EAAAA,WAAW,GAAG;AACV;;AADU,SA2EdC,mBA3Ec,GA2EQ,CAACC,EAAD,EAAIC,IAAJ,KAAc;AAChC,WAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,MAAlD,EAA0DH,KAAK,EAA/D,EAAmE;AAC/D,YAAG,KAAKC,KAAL,CAAWC,UAAX,CAAsBF,KAAtB,EAA6B,IAA7B,MAAuCF,EAA1C,EACA;AACI,cAAIM,SAAS,GAAG,KAAKH,KAAL,CAAWC,UAA3B;AACAE,UAAAA,SAAS,CAACJ,KAAD,CAAT,CAAiB,MAAjB,IAA2BD,IAA3B;AACA,eAAKM,QAAL,CAAc;AAACH,YAAAA,UAAU,EAAEE;AAAb,WAAd;AACH;AACJ;AAEJ,KArFa;;AAAA,SAuFdE,QAvFc,GAuFH,MAAM;AACbC,MAAAA,UAAU,CAAC,YAAY;AAACf,QAAAA,SAAS,CAACgB,MAAV,GAAmB,KAAnB;AAA0B,OAAxC,EAAyC,GAAzC,CAAV;AACAtB,MAAAA,MAAM,CAACuB,IAAP,CAAY,gBAAZ,EAA8B,KAAKC,OAAL,CAAaZ,EAA3C;AACH,KA1Fa;;AAAA,SA4Fda,aA5Fc,GA4FGC,IAAD,IAAU;AACtB,UAAGpB,SAAS,CAACgB,MAAV,KAAqB,IAAxB,EACA;AACI,YAAIK,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAKL,OAAL,CAAaZ,EAArC,CAApB;AACAe,QAAAA,aAAa,CAACG,KAAd,CAAoBC,SAApB,GAA8B,EAA9B;AACH;;AACDxB,MAAAA,YAAY,GAAGqB,QAAQ,CAACC,cAAT,CAAwBH,IAAxB,CAAf;AACAnB,MAAAA,YAAY,CAACuB,KAAb,CAAmBC,SAAnB,GAA6B,oBAA7B;AACAxB,MAAAA,YAAY,CAACuB,KAAb,CAAmBE,iBAAnB,GAAqC,IAArC;AACH,KArGa;;AAAA,SAuGdC,YAvGc,GAuGEC,CAAD,IAAO;AAClB,WAAKvB,mBAAL,CAAyB,KAAKa,OAAL,CAAaZ,EAAtC,EAAyCsB,CAAC,CAACC,MAAF,CAASC,KAAlD;AACA,YAAMV,IAAI,GAAG;AAACd,QAAAA,EAAE,EAAG,KAAKY,OAAL,CAAaZ,EAAnB;AAAuBwB,QAAAA,KAAK,EAAGF,CAAC,CAACC,MAAF,CAASC;AAAxC,OAAb;AACA,WAAKZ,OAAL,CAAaD,IAAb,CAAkB,kBAAlB,EAAqCG,IAArC;AACA,WAAKP,QAAL,CAAc;AAACN,QAAAA,IAAI,EAAEqB,CAAC,CAACC,MAAF,CAASC;AAAhB,OAAd;AACH,KA5Ga;;AAAA,SA8GdC,eA9Gc,GA8GKH,CAAD,IAAO;AACrB,UAAGA,CAAC,CAACI,OAAF,KAAc,EAAd,IAAoBJ,CAAC,CAACK,QAAF,KAAe,KAAnC,IAA6C,KAAKC,IAAL,CAAU,KAAKzB,KAAL,CAAWF,IAArB,CAAhD,EAA6E;AACzEqB,QAAAA,CAAC,CAACO,cAAF;;AACA,YAAI,KAAKC,qBAAL,CAA2B,KAAK3B,KAAL,CAAWF,IAAtC,EAA2C,KAAKE,KAAL,CAAW4B,QAAtD,CAAJ,EACA;AACA,eAAKnB,OAAL,CAAaD,IAAb,CAAkB,aAAlB,EAAgC,KAAKR,KAAL,CAAWF,IAA3C;AACC,SAHD,MAKA;AACC,eAAKW,OAAL,CAAaD,IAAb,CAAkB,aAAlB;AACA;AACF;AACF,KA1HS;;AAAA,SA4HVmB,qBA5HU,GA4Ha,CAAC7B,IAAD,EAAM8B,QAAN,KAAmB;AACtC,UAAG9B,IAAI,CAACI,MAAL,IAAe0B,QAAQ,CAAC1B,MAA3B,EACA;AACA,aAAK,IAAIH,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,IAAI,CAACI,MAAjC,EAAyCH,KAAK,EAA9C,EAAkD;AAC9C,cAAGD,IAAI,CAACC,KAAD,CAAJ,KAAgB6B,QAAQ,CAAC,CAAD,CAA3B,EACA;AACI,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAAC1B,MAA7B,EAAqC2B,CAAC,EAAtC,EAA0C;AACtC,kBAAGD,QAAQ,CAACC,CAAD,CAAR,KAAgB/B,IAAI,CAAC+B,CAAD,CAAvB,EAA4B;AAC5B,kBAAGD,QAAQ,CAAC1B,MAAT,GAAgB,CAAhB,KAAsB2B,CAAzB,EACI,OAAO,IAAP;AACP;AACJ;AACJ;AACJ;;AACD,aAAO,KAAP;AACC,KA3IS;;AAEV,SAAK7B,KAAL,GAAa;AACT8B,MAAAA,KAAK,EAAE,EADE;AAET7B,MAAAA,UAAU,EAAE,EAFH;AAGTH,MAAAA,IAAI,EAAE,EAHG;AAIT8B,MAAAA,QAAQ,EAAE,EAJD;AAKTG,MAAAA,WAAW,EAAE;AALJ,KAAb;AAOH;;AAEDC,EAAAA,iBAAiB,GAAE;AAEf;AACA1C,IAAAA,WAAW,GAAGuB,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAd,CAHe,CAIf;;AACAvB,IAAAA,SAAS,GAAGsB,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;AACAzB,IAAAA,YAAY,CAAC4C,IAAb,CAAkB,CAAC;AACfC,MAAAA,IAAI,EAAE5C,WADS;AAEfqB,MAAAA,IAAI,EAAE;AACJwB,QAAAA,OAAO,EAAE,cADL;AAEJC,QAAAA,eAAe,EAAE,mBAFb;AAGJC,QAAAA,kBAAkB,EAAE;AAHhB;AAFS,KAAD,CAAlB;AAUA,SAAK5B,OAAL,CAAa6B,EAAb,CAAgB,sBAAhB,EAAwC3B,IAAI,IAAI;AAC5C,WAAKP,QAAL,CAAc;AAAC0B,QAAAA,KAAK,EAACnB,IAAI,CAACmB;AAAZ,OAAd;AACA,WAAK1B,QAAL,CAAc;AAACH,QAAAA,UAAU,EAAE,KAAKsC,YAAL,CAAkB5B,IAAI,CAACmB,KAAvB;AAAb,OAAd;AACH,KAHD;AAIA,SAAKrB,OAAL,CAAa6B,EAAb,CAAgB,iBAAhB,EAAmC3B,IAAD,IAAU;AAAC,WAAK6B,sBAAL,CAA4B7B,IAAI,CAAC8B,SAAjC;AAA4C,KAAzF,EApBe,CAsBf;;AACA,SAAKhC,OAAL,CAAa6B,EAAb,CAAgB,eAAhB,EAAkC3B,IAAD,IAAU;AACvC,WAAKP,QAAL,CAAc;AAAC2B,QAAAA,WAAW,EAAEpB,IAAI,CAAC+B;AAAnB,OAAd;AACApC,MAAAA,UAAU,CAAC,YAAY;AAACK,QAAAA,IAAI,CAACgC,IAAL,GAAYhC,IAAI,CAACgC,IAAL,CAAUC,SAAV,CAAoB,CAApB,EAAuBjC,IAAI,CAACT,MAAL,GAAc,CAArC,CAAZ;AAAqD,aAAKE,QAAL,CAAc;AAACwB,UAAAA,QAAQ,EAACjB,IAAI,CAACgC;AAAf,SAAd;AAAoC,OAAtG,CAAuGE,IAAvG,CAA4G,IAA5G,CAAD,EAAmH,IAAnH,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYpC,IAAI,CAAC+B,SAAjB;AACAjD,MAAAA,UAAU,GAAGuD,WAAW,CAAC,KAAKC,OAAN,EAAetC,IAAI,CAAC+B,SAAL,GAAe,GAA9B,CAAxB;AACH,KALD;AAMA,SAAKjC,OAAL,CAAa6B,EAAb,CAAgB,MAAhB,EAAwB,MAAM;AAAC,WAAKjC,QAAL;AAAgB,KAA/C,EA7Be,CA8Bf;;AACA,SAAKI,OAAL,CAAa6B,EAAb,CAAgB,eAAhB,EAAkC3B,IAAD,IAAU;AAAC,WAAKD,aAAL,CAAmBC,IAAnB;AAAyB,KAArE,EA/Be,CAgCf;;AACA,SAAKF,OAAL,CAAa6B,EAAb,CAAgB,kBAAhB,EAAqC3B,IAAD,IAAU;AAAC,WAAKf,mBAAL,CAAyBe,IAAI,CAACd,EAA9B,EAAiCc,IAAI,CAACU,KAAtC;AAA6C,KAA5F;AACA,SAAKZ,OAAL,CAAa6B,EAAb,CAAgB,eAAhB,EAAkC3B,IAAD,IAAU;AAACA,MAAAA,IAAI,GAAGA,IAAI,CAACiC,SAAL,CAAe,CAAf,EAAkBjC,IAAI,CAACT,MAAL,GAAc,CAAhC,CAAP;AAA2C,WAAKgD,aAAL,CAAmBvC,IAAnB;AAAyB,KAAhH;AACA,SAAKF,OAAL,CAAa6B,EAAb,CAAgB,iBAAhB,EAAmC,MAAM,KAAKa,eAAL,EAAzC;AAEH;;AACDZ,EAAAA,YAAY,CAAC5B,IAAD,EAAO;AACf,QAAIV,UAAU,GAAG,EAAjB;;AACA,SAAK,IAAImD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzC,IAAI,CAACT,MAAzB,EAAiCkD,CAAC,EAAlC,EAAsC;AAC9B,UAAIvD,EAAE,GAAGc,IAAI,CAACyC,CAAD,CAAJ,CAAQX,SAAjB;AACA,UAAIY,IAAI,GAAG1C,IAAI,CAACyC,CAAD,CAAJ,CAAQC,IAAnB;AACA,UAAIvD,IAAI,GAAG,EAAX;AACA,YAAMwD,IAAI,GAAG;AAACzD,QAAAA,EAAE,EAAEA,EAAL;AAAQwD,QAAAA,IAAI,EAAEA,IAAd;AAAoBvD,QAAAA,IAAI,EAAEA;AAA1B,OAAb;AACAG,MAAAA,UAAU,CAACsD,IAAX,CAAgBD,IAAhB;AACH;;AACL,WAAOrD,UAAP;AACH;;AACAuC,EAAAA,sBAAsB,CAAC3C,EAAD,EAAK;AACxB,QAAIiC,KAAK,GAAG,KAAK9B,KAAL,CAAW8B,KAAvB;AACA,QAAI7B,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA5B;;AACA,SAAK,IAAImD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtB,KAAK,CAAC5B,MAA1B,EAAkCkD,CAAC,EAAnC,EAAuC;AACrC,UAAItB,KAAK,CAACsB,CAAD,CAAL,CAASX,SAAT,KAAuB5C,EAA3B,EAA+B;AAC3BiC,QAAAA,KAAK,CAAC0B,MAAN,CAAaJ,CAAb,EAAe,CAAf;AACAnD,QAAAA,UAAU,CAACuD,MAAX,CAAkBJ,CAAlB,EAAoB,CAApB;AACA;AACH;AACF;;AACD,SAAKhD,QAAL,CAAc;AACV0B,MAAAA,KAAK,EAAEA,KADG;AAEV7B,MAAAA,UAAU,EAAEA;AAFF,KAAd;AAIH;;AAkEGiD,EAAAA,aAAa,CAAEtB,QAAF,EAAY;AACrB,SAAKxB,QAAL,CAAc;AAACN,MAAAA,IAAI,EAAE,EAAP;AAAU8B,MAAAA,QAAQ,EAACA;AAAnB,KAAd;AACA,SAAKhC,mBAAL,CAAyB,KAAKa,OAAL,CAAaZ,EAAtC,EAAyC,EAAzC;AACA,UAAMc,IAAI,GAAG;AAACd,MAAAA,EAAE,EAAG,KAAKY,OAAL,CAAaZ,EAAnB;AAAuBwB,MAAAA,KAAK,EAAG;AAA/B,KAAb;AACA,SAAKZ,OAAL,CAAaD,IAAb,CAAkB,kBAAlB,EAAqCG,IAArC,EAJqB,CAKrB;;AACAnB,IAAAA,YAAY,CAACuB,KAAb,CAAmBC,SAAnB,GAA6B,EAA7B;AACAzB,IAAAA,SAAS,CAACgB,MAAV,GAAmB,IAAnB;AACH;;AACD4C,EAAAA,eAAe,GAAI;AACf7D,IAAAA,WAAW,CAACyB,KAAZ,CAAkBC,SAAlB,GAA4B,EAA5B;AACA1B,IAAAA,WAAW,CAACyB,KAAZ,CAAkBC,SAAlB,GAA4B,qBAA5B;AACAV,IAAAA,UAAU,CAAC,YAAY;AAAChB,MAAAA,WAAW,CAACyB,KAAZ,CAAkBC,SAAlB,GAA4B,mBAA5B;AAAiD,KAA/D,EAAgE,GAAhE,CAAV;AACH;;AACDiC,EAAAA,OAAO,GAAI;AACPH,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAzD,IAAAA,WAAW,CAACyB,KAAZ,CAAkB0C,OAAlB,GAA4B,CAA5B;AACAnE,IAAAA,WAAW,CAACyB,KAAZ,CAAkB2C,SAAlB,GAA8B,wBAA9B;AACApE,IAAAA,WAAW,CAACyB,KAAZ,CAAkB4C,YAAlB,GAAiC,wBAAjC;AACArE,IAAAA,WAAW,CAACyB,KAAZ,CAAkB6C,eAAlB,GAAoC,wBAApC;AACAtE,IAAAA,WAAW,CAACyB,KAAZ,CAAkB8C,UAAlB,GAA+B,wBAA/B;AACAC,IAAAA,aAAa,CAACrE,UAAD,CAAb;AACH;;AAELsE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BAEA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,EAAE,EAAC,MAAzB;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA,oBAAgC,KAAK/D,KAAL,CAAW4B;AAA3C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,2BAAc,gBAAnB;AAAoC,oCAAuB,mBAA3D;AAA+E,uCAA0B,KAAzG;AAA+G,4BAAe,gBAA9H;AAA+I,UAAA,SAAS,EAAC,SAAzJ;AAAmK,UAAA,EAAE,EAAC,SAAtK;AAAgL,UAAA,GAAG,EAAEzC,YAArL;AAAmM,UAAA,GAAG,EAAC;AAAvM;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,oBAEE,KAAKa,KAAL,CAAWC,UAAX,IAAyB,KAAKD,KAAL,CAAWC,UAAX,CAAsB+D,GAAtB,CAA0BV,IAAI,IAAK;AAC9D,gCAAO,QAAC,IAAD;AAAoB,cAAA,EAAE,EAAEA,IAAI,CAACzD,EAA7B;AAAiC,cAAA,IAAI,EAAEyD,IAAI,CAACD,IAA5C;AAAmD,cAAA,IAAI,EAAEC,IAAI,CAACxD;AAA9D,eAAWwD,IAAI,CAACzD,EAAhB;AAAA;AAAA;AAAA;AAAA,oBAAP;AACP,WAFkC;AAF3B;AAAA;AAAA;AAAA;AAAA,gBAHJ,eASI;AAAK,UAAA,EAAE,EAAC,OAAR;AAAgB,UAAA,SAAS,EAAC,cAA1B;AAAyC,UAAA,MAAM,MAA/C;AAAA,iCACA;AAAU,YAAA,WAAW,EAAC,gEAAtB;AAAqC,qCAAsB,kBAA3D;AAA8E,YAAA,SAAS,EAAC,IAAxF;AAA6F,YAAA,KAAK,EAAE,KAAKG,KAAL,CAAWF,IAA/G;AAAqH,YAAA,QAAQ,EAAE,KAAKoB,YAApI;AAAkJ,YAAA,SAAS,EAAE,KAAKI;AAAlK;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AAzLuC;AAAvB5B,I,CACVuE,W,GAAc/E,a","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport './Game.css'\r\nimport {socket, SocketContext} from '../../components/context/socket'\r\nimport waterballoon from './assets/waterballoon.png'\r\nimport User from './Users/User';\r\nimport disintegrate from 'disintegrate'\r\nvar balloon_elm, input_elm,current_user, roundTimer;\r\n\r\nexport default class Game extends Component {\r\n    static contextType = SocketContext;\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            users: [],\r\n            user_names: [],\r\n            text: \"\",\r\n            syllable: \"\",\r\n            currentTime: 0,\r\n          };\r\n    }\r\n    \r\n    componentDidMount(){\r\n        \r\n        // get balloon element\r\n        balloon_elm = document.getElementById('balloon');\r\n        // get input element\r\n        input_elm = document.getElementById('input');\r\n        disintegrate.init([{\r\n            elem: balloon_elm,\r\n            data: {\r\n              disType: \"simultaneous\",\r\n              disParticleType: \"ExplodingParticle\",\r\n              disReductionFactor: 111\r\n            }\r\n          }]\r\n          );\r\n\r\n        this.context.on(\"user_joined_received\", data => {\r\n            this.setState({users:data.users})\r\n            this.setState({user_names: this.getUserNames(data.users)})\r\n        })\r\n        this.context.on('user_disconnect',(data) => {this.removeDisconnectedUser(data.socket_id)})\r\n\r\n        // gets syllable\r\n        this.context.on('Starting Game', (data) => {\r\n            this.setState({currentTime: data.roundTime});\r\n            setTimeout(function () {data.room = data.room.substring(0, data.length - 1); this.setState({syllable:data.room})}.bind(this),3500)\r\n            console.log(data.roundTime);\r\n            roundTimer = setInterval(this.timesUp, data.roundTime*100);\r\n        })\r\n        this.context.on('Turn', () => {this.userTurn()})\r\n        // on socket user_animation\r\n        this.context.on('user_animated', (data) => {this.userAnimation(data)})\r\n        // update users input \r\n        this.context.on('updateTextInputs', (data) => {this.changeTextValueByID(data.id,data.value)})\r\n        this.context.on('correctAnswer', (data) => {data = data.substring(0, data.length - 1); this.correctAnswer(data)})\r\n        this.context.on('incorrectAnswer', () => this.incorrectAnswer())\r\n\r\n    }\r\n    getUserNames(data) {\r\n        let user_names = [];\r\n        for (var i = 0; i < data.length; i++) {\r\n                let id = data[i].socket_id;\r\n                let name = data[i].name;\r\n                let text = \"\";\r\n                const user = {id: id,name: name, text: text}\r\n                user_names.push(user);\r\n            }\r\n        return user_names;\r\n    }\r\n     removeDisconnectedUser(id) {\r\n        let users = this.state.users;\r\n        let user_names = this.state.user_names;\r\n        for (var i = 0; i < users.length; i++) {\r\n          if (users[i].socket_id === id) {\r\n              users.splice(i,1)\r\n              user_names.splice(i,1)\r\n              continue\r\n          }\r\n        }\r\n        this.setState({\r\n            users: users,\r\n            user_names: user_names\r\n        })\r\n    }\r\n    changeTextValueByID = (id,text) =>  {\r\n        for (let index = 0; index < this.state.user_names.length; index++) {\r\n            if(this.state.user_names[index]['id'] === id)\r\n            {\r\n                let duplicate = this.state.user_names;\r\n                duplicate[index]['text'] = text;\r\n                this.setState({user_names: duplicate});\r\n            }\r\n        }\r\n\r\n    }\r\n    //handles user turn\r\n    userTurn = () => {\r\n        setTimeout(function () {input_elm.hidden = false;},500)\r\n        socket.emit('user_animation', this.context.id);\r\n    }\r\n    // handles user animation\r\n    userAnimation = (data) => {\r\n        if(input_elm.hidden === true) \r\n        {\r\n            let user_elm_prev = document.getElementById(this.context.id);\r\n            user_elm_prev.style.animation='';\r\n        }\r\n        current_user = document.getElementById(data);\r\n        current_user.style.animation='heartBeat infinite';\r\n        current_user.style.animationDuration='2s';\r\n    }\r\n    // handles on answer change input\r\n    handleChange = (e) => {\r\n        this.changeTextValueByID(this.context.id,e.target.value);\r\n        const data = {id : this.context.id, value : e.target.value}\r\n        this.context.emit('changedTextValue',data)\r\n        this.setState({text: e.target.value})\r\n    }\r\n    // submits answer\r\n    onSubmitMessage = (e) => {\r\n        if(e.keyCode === 13 && e.shiftKey === false && (/\\S/.test(this.state.text))) {\r\n            e.preventDefault();\r\n            if (this.checkIfSyllableExists(this.state.text,this.state.syllable))\r\n            {\r\n            this.context.emit('checkAnswer',this.state.text);\r\n            }\r\n            else\r\n            {\r\n             this.context.emit('wrongAnswer');\r\n            }\r\n          }\r\n        }\r\n        // hebrew includes function, can't use js includes\r\n        checkIfSyllableExists= (text,syllable) => {\r\n            if(text.length >= syllable.length)\r\n            {\r\n            for (let index = 0; index < text.length; index++) {\r\n                if(text[index] === syllable[0])\r\n                {\r\n                    for (let j = 1; j < syllable.length; j++) {\r\n                        if(syllable[j] !== text[j]) break;\r\n                        if(syllable.length-1 === j)\r\n                            return true;\r\n                    }\r\n                }                \r\n            }\r\n        }\r\n        return false;\r\n        }\r\n        correctAnswer (syllable) {\r\n            this.setState({text: \"\",syllable:syllable});\r\n            this.changeTextValueByID(this.context.id,\"\");\r\n            const data = {id : this.context.id, value : \"\"}\r\n            this.context.emit('changedTextValue',data)\r\n            // checks if current turn \r\n            current_user.style.animation='';\r\n            input_elm.hidden = true;\r\n        }\r\n        incorrectAnswer () {\r\n            balloon_elm.style.animation='';\r\n            balloon_elm.style.animation='shake 0.5s infinite';\r\n            setTimeout(function () {balloon_elm.style.animation='shake 4s infinite';},500)\r\n        }\r\n        timesUp () {\r\n            console.log(\"LALA\");\r\n            balloon_elm.style.opacity = 0;\r\n            balloon_elm.style.transform = 'scale(5) rotate(30deg)';\r\n            balloon_elm.style.mozTransform = 'scale(5) rotate(30deg)';\r\n            balloon_elm.style.webkitTransform = 'scale(5) rotate(30deg)';\r\n            balloon_elm.style.oTransform = 'scale(5) rotate(30deg)';\r\n            clearInterval(roundTimer);\r\n        }\r\n        \r\n    render() {\r\n        return (\r\n            <div className=\"Balloon-Party\">\r\n\r\n            <div className=\"Game\" id=\"game\"> \r\n                <span className=\"syllable-txt\">{this.state.syllable}</span>\r\n                <img data-dis-type=\"self-contained\" data-dis-particle-type=\"ExplodingParticle\" data-dis-reduction-factor=\"100\" data-dis-color=\"[90, 169, 235]\" className=\"balloon\" id=\"balloon\" src={waterballoon} alt=\"Balloon\"/>\r\n                <div className=\"users\">\r\n\r\n                { this.state.user_names && this.state.user_names.map(user  => {\r\n                return <User key={user.id} id={user.id} name={user.name}  text={user.text} />;\r\n        })}\r\n                </div>\r\n                <div id=\"input\" className=\"input-answer\" hidden>\r\n                <textarea placeholder=\"הקלד/י תשובה\" data-placeholder-text=\"typeheretoanswer\" maxLength=\"40\" value={this.state.text} onChange={this.handleChange} onKeyDown={this.onSubmitMessage} ></textarea>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n        }\r\n"]},"metadata":{},"sourceType":"module"}