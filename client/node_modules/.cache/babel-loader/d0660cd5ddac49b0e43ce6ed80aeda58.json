{"ast":null,"code":"var _jsxFileName = \"C:\\\\MERN Projects\\\\BombParty\\\\bombparty\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React from 'react';\nimport { SocketContext } from '../context/socket';\nimport Message from './Messages/Message';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chat extends React.Component {\n  constructor() {\n    super();\n    this.nickname = JSON.parse(localStorage.getItem('settings')).nickname;\n    this.currentDate = new Date();\n\n    this.gameStartMessage = seconds => {\n      setInterval(function () {\n        seconds--;\n        const message = {\n          time: seconds,\n          type: 'gameStart'\n        };\n        this.setState({\n          messageList: [...this.state.messageList, message]\n        });\n      }, 1000);\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        text: e.target.value\n      });\n    };\n\n    this.onSubmitMessage = e => {\n      if (e.keyCode === 13 && e.shiftKey === false && /\\S/.test(this.state.text)) {\n        e.preventDefault();\n        const data = {\n          name: this.nickname,\n          time: this.currentDate.timeNow(),\n          type: \"text\",\n          text: this.state.text\n        };\n        this.context.emit('message', data); // add message and reset input\n\n        this.setState({\n          messageList: [...this.state.messageList, data],\n          text: \"\"\n        });\n      }\n    };\n\n    this.state = {\n      text: \"\",\n      messageList: []\n    }; // eslint-disable-next-line \n\n    Date.prototype.timeNow = function () {\n      return (this.getHours() < 10 ? \"0\" : \"\") + this.getHours() + \":\" + (this.getMinutes() < 10 ? \"0\" : \"\") + this.getMinutes();\n    };\n  }\n\n  componentDidMount() {\n    const message = {\n      name: this.nickname,\n      time: this.currentDate.timeNow(),\n      type: 'connection'\n    }; // on user connection to chat\n\n    this.context.on('user_connected', () => {\n      this.context.emit('user_joined_sent', message);\n    });\n    this.context.on('user_joined_received', data => {\n      this.setState({\n        messageList: [...this.state.messageList, data.data_msg]\n      });\n    });\n    this.context.on('user_disconnect', data => {\n      const message = {\n        name: data.user_name,\n        time: this.currentDate.timeNow(),\n        type: 'disconnection'\n      }; //ðŸ’¥ ðŸŒŠ\n\n      this.setState({\n        messageList: [...this.state.messageList, message]\n      });\n    }); // on message received\n\n    this.context.on('message_received', data => {\n      this.setState({\n        messageList: [...this.state.messageList, data]\n      });\n    }); // starts game \n\n    this.context.on('Starting Game', () => this.gameStartMessage(3));\n  } // handle game Start message\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: this.state.messageList.map((message, i) => {\n          return /*#__PURE__*/_jsxDEV(Message, {\n            message: message\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"\\u05D4\\u05E7\\u05DC\\u05D3/\\u05D9 \\u05D4\\u05D5\\u05D3\\u05E2\\u05D4\",\n          \"data-placeholder-text\": \"typeHereToChat\",\n          maxLength: \"40\",\n          value: this.state.text,\n          onChange: this.handleChange,\n          onKeyDown: this.onSubmitMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nChat.contextType = SocketContext;\nexport default Chat;","map":{"version":3,"sources":["C:/MERN Projects/BombParty/bombparty/client/src/components/Chat/Chat.js"],"names":["React","SocketContext","Message","Chat","Component","constructor","nickname","JSON","parse","localStorage","getItem","currentDate","Date","gameStartMessage","seconds","setInterval","message","time","type","setState","messageList","state","handleChange","e","text","target","value","onSubmitMessage","keyCode","shiftKey","test","preventDefault","data","name","timeNow","context","emit","prototype","getHours","getMinutes","componentDidMount","on","data_msg","user_name","render","map","i","contextType"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { SocketContext } from '../context/socket';\r\nimport Message from './Messages/Message'\r\nimport './Chat.css'\r\n\r\nclass Chat extends React.Component {\r\n    static contextType = SocketContext;\r\n    nickname = JSON.parse(localStorage.getItem('settings')).nickname;\r\n    currentDate = new Date();\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n          text: \"\",\r\n          messageList: [],\r\n        };\r\n    // eslint-disable-next-line \r\n    Date.prototype.timeNow = function () {\r\n        return ((this.getHours() < 10)?\"0\":\"\") + this.getHours() +\":\"+ ((this.getMinutes() < 10)?\"0\":\"\") + this.getMinutes();\r\n        }        \r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const message = {\r\n            name : this.nickname,\r\n            time : this.currentDate.timeNow(),\r\n            type: 'connection',\r\n        }\r\n    // on user connection to chat\r\n    this.context.on('user_connected',() => {\r\n        this.context.emit('user_joined_sent',message);\r\n    })\r\n\r\n    this.context.on('user_joined_received', (data) => {\r\n        this.setState({messageList: [...this.state.messageList, data.data_msg]})\r\n    }) \r\n    this.context.on('user_disconnect',(data) => {\r\n            const message = {\r\n                name : data.user_name,\r\n                time : this.currentDate.timeNow(),\r\n                type: 'disconnection',\r\n            }\r\n            //ðŸ’¥ ðŸŒŠ\r\n            this.setState({messageList: [...this.state.messageList, message]})\r\n            }) \r\n    // on message received\r\n    this.context.on('message_received',data => { \r\n        this.setState({messageList: [...this.state.messageList, data]})\r\n    })\r\n    // starts game \r\n    this.context.on('Starting Game', () => this.gameStartMessage(3));\r\n}\r\n        // handle game Start message\r\n    gameStartMessage = (seconds) => {\r\n        setInterval(function(){ \r\n            seconds--;\r\n            const message = {\r\n                time: seconds,\r\n                type: 'gameStart',\r\n            }\r\n            this.setState({messageList: [...this.state.messageList, message]});\r\n         }, 1000);\r\n    }\r\n    // handles on change input\r\n    handleChange = (e) => {\r\n        this.setState({text: e.target.value})\r\n    }\r\n    onSubmitMessage = (e) => {\r\n        if(e.keyCode === 13 && e.shiftKey === false && (/\\S/.test(this.state.text))) {\r\n            e.preventDefault();\r\n            const data = {\r\n                name : this.nickname,\r\n                time : this.currentDate.timeNow(),\r\n                type: \"text\",\r\n                text: this.state.text\r\n            };\r\n            this.context.emit('message',data);\r\n            // add message and reset input\r\n            this.setState({messageList: [...this.state.messageList, data], text: \"\"})\r\n          }\r\n        }\r\n    render() {\r\n    return (\r\n        <div className=\"Chat\">\r\n        <div className=\"messages\">\r\n        {this.state.messageList.map((message, i) => {\r\n          return <Message message={message} key={i} />;\r\n        })}\r\n        </div>\r\n            <div className=\"input\">\r\n            <textarea placeholder=\"×”×§×œ×“/×™ ×”×•×“×¢×”\" data-placeholder-text=\"typeHereToChat\" maxLength=\"40\" value={this.state.text} onChange={this.handleChange} onKeyDown={this.onSubmitMessage} ></textarea>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n    \r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}