{"ast":null,"code":"var _jsxFileName = \"C:\\\\MERN Projects\\\\BombParty\\\\bombparty\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { SocketContext } from '../context/socket';\nimport Message from './Messages/Message';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = props => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [messageList, setMessage] = useState([]);\n  const currentDate = new Date();\n  const socket = useContext(SocketContext); // For the time now\n  // eslint-disable-next-line\n\n  Date.prototype.timeNow = function () {\n    return (this.getHours() < 10 ? \"0\" : \"\") + this.getHours() + \":\" + (this.getMinutes() < 10 ? \"0\" : \"\") + this.getMinutes();\n  };\n\n  useEffect(() => {\n    // on user connection to chat\n    socket.on('user_joined', data => {\n      socket.emit('message', {\n        name: \"איתי\",\n        time: currentDate.timeNow(),\n        type: 'connection'\n      });\n    });\n    socket.on('user_disconnected', data => {\n      socket.emit('message', {\n        name: \"איתי\",\n        time: currentDate.timeNow(),\n        type: 'disconnection'\n      });\n    }); // eslint-disable-next-line\n  }, [socket]);\n  useEffect(() => {\n    // on message received\n    socket.on('message_received', data => {\n      setMessage([...messageList, data]);\n      console.log(messageList);\n    });\n  }, [socket, messageList]); // handles on change input\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const onSubmitMessage = e => {\n    if (e.keyCode === 13 && e.shiftKey === false && /\\S/.test(value)) {\n      e.preventDefault();\n      socket.emit('message', {\n        name: \"איתי\",\n        time: currentDate.timeNow(),\n        type: \"text\",\n        text: value\n      }); // resets input\n\n      setValue(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messageList.map((message, i) => {\n        return /*#__PURE__*/_jsxDEV(Message, {\n          message: message\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"\\u05D4\\u05E7\\u05DC\\u05D3/\\u05D9 \\u05D4\\u05D5\\u05D3\\u05E2\\u05D4\",\n        \"data-placeholder-text\": \"typeHereToChat\",\n        maxLength: \"150\",\n        value: value,\n        onChange: handleChange,\n        onKeyDown: onSubmitMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"/5ICxHxQrbPg3yMCxMIemIFey94=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/MERN Projects/BombParty/bombparty/client/src/components/Chat/Chat.js"],"names":["React","useState","useContext","useEffect","SocketContext","Message","Chat","props","value","setValue","messageList","setMessage","currentDate","Date","socket","prototype","timeNow","getHours","getMinutes","on","data","emit","name","time","type","console","log","handleChange","e","target","onSubmitMessage","keyCode","shiftKey","test","preventDefault","text","map","message","i"],"mappings":"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","sourcesContent":["import React, { useState,useContext,useEffect } from 'react';\r\nimport { SocketContext } from '../context/socket';\r\nimport Message from './Messages/Message'\r\nimport './Chat.css'\r\nconst Chat = (props) => {\r\n    const [value, setValue] = useState(\"\");\r\n    const [messageList,setMessage] = useState([])\r\n    const currentDate = new Date();\r\n    const socket = useContext(SocketContext);\r\n    // For the time now\r\n    // eslint-disable-next-line\r\n    Date.prototype.timeNow = function () {\r\n    return ((this.getHours() < 10)?\"0\":\"\") + this.getHours() +\":\"+ ((this.getMinutes() < 10)?\"0\":\"\") + this.getMinutes();\r\n    }\r\n\r\n    useEffect(() => {\r\n    // on user connection to chat\r\n        socket.on('user_joined',(data) => {\r\n            socket.emit('message',{\r\n                name : \"איתי\",\r\n                time : currentDate.timeNow(),\r\n                type: 'connection',\r\n            });\r\n            })    \r\n        socket.on('user_disconnected',(data) => {\r\n                socket.emit('message',{\r\n                    name : \"איתי\",\r\n                    time : currentDate.timeNow(),\r\n                    type: 'disconnection',\r\n                });\r\n                }) \r\n    // eslint-disable-next-line\r\n    },[socket])\r\n    useEffect(() => {\r\n    // on message received\r\n    \r\n    socket.on('message_received',data => { \r\n        setMessage([...messageList, data])\r\n        console.log(messageList);\r\n    })\r\n\r\n    },[socket,messageList])\r\n    // handles on change input\r\n    const handleChange = (e) => {\r\n        setValue(e.target.value);\r\n    }\r\n    const onSubmitMessage = (e) => {\r\n        if(e.keyCode === 13 && e.shiftKey === false && (/\\S/.test(value))) {\r\n            e.preventDefault();\r\n            socket.emit('message',{\r\n                name : \"איתי\",\r\n                time : currentDate.timeNow(),\r\n                type: \"text\",\r\n                text: value\r\n            });\r\n            // resets input\r\n            setValue(\"\")\r\n          }\r\n    }\r\n    return (\r\n        <div className=\"Chat\">\r\n        <div className=\"messages\">\r\n        {messageList.map((message, i) => {\r\n          return <Message message={message} key={i} />;\r\n        })}\r\n        </div>\r\n            <div className=\"input\">\r\n            <textarea placeholder=\"הקלד/י הודעה\" data-placeholder-text=\"typeHereToChat\" maxLength=\"150\" value={value} onChange={handleChange} onKeyDown={onSubmitMessage} ></textarea>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n"]},"metadata":{},"sourceType":"module"}