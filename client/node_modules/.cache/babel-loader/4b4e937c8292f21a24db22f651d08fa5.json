{"ast":null,"code":"var _jsxFileName = \"C:\\\\MERN Projects\\\\BombParty\\\\bombparty\\\\client\\\\src\\\\components\\\\Game\\\\Game.js\";\nimport React, { Component } from 'react';\nimport './Game.css';\nimport { SocketContext } from '../../components/context/socket';\nimport User from './Users/User';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Game extends Component {\n  constructor() {\n    super();\n    this.state = {\n      users: [],\n      user_names: []\n    };\n  }\n\n  componentDidMount() {\n    this.context.on(\"user_joined_received\", data => {\n      this.setState({\n        users: data.users\n      });\n      this.setState({\n        user_names: this.getUserNames(data.users)\n      });\n      console.log(data.users);\n    });\n    this.context.on('user_disconnect', data => {\n      console.log(\"Hallo\");\n      this.removeDisconnectedUser(data.socket_id);\n    });\n  }\n\n  getUserNames(data) {\n    let names = [];\n\n    for (var i = 0; i < data.length; i++) {\n      let name = data[i].name;\n      names.push(name);\n    }\n\n    return names;\n  }\n\n  removeDisconnectedUser(id) {\n    let users = this.state.users;\n    let user_names = this.state.user_names;\n\n    for (var i = 0; i < users.length; i++) {\n      if (users[i].socket_id === id) {\n        users.splice(i, 1);\n        user_names.splice(i, 1);\n        continue;\n      }\n    }\n\n    this.setState({\n      users: users,\n      user_names: user_names\n    });\n    console.log(this.state.user_names);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Balloon-Party\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Balloon-Background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Game\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"users\",\n          children: this.state.user_names && this.state.user_names.map((user, i) => {\n            return /*#__PURE__*/_jsxDEV(User, {\n              name: user\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 18\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-answer\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nGame.contextType = SocketContext;","map":{"version":3,"sources":["C:/MERN Projects/BombParty/bombparty/client/src/components/Game/Game.js"],"names":["React","Component","SocketContext","User","Game","constructor","state","users","user_names","componentDidMount","context","on","data","setState","getUserNames","console","log","removeDisconnectedUser","socket_id","names","i","length","name","push","id","splice","render","map","user","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport './Game.css'\r\nimport {SocketContext} from '../../components/context/socket'\r\nimport User from './Users/User';\r\n\r\nexport default class Game extends Component {\r\n    static contextType = SocketContext;\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            users: [],\r\n            user_names: []\r\n          };\r\n    }\r\n    componentDidMount(){\r\n        this.context.on(\"user_joined_received\", data => {\r\n            this.setState({users:data.users})\r\n            this.setState({user_names: this.getUserNames(data.users)})\r\n            console.log(data.users)\r\n        })\r\n        this.context.on('user_disconnect',(data) => {console.log(\"Hallo\"); this.removeDisconnectedUser(data.socket_id)})\r\n    }\r\n    getUserNames(data) {\r\n        let names = [];\r\n        for (var i = 0; i < data.length; i++) {\r\n                let name = data[i].name;\r\n                names.push(name);\r\n            }\r\n        return names;\r\n    }\r\n     removeDisconnectedUser(id) {\r\n        let users = this.state.users;\r\n        let user_names = this.state.user_names;\r\n        for (var i = 0; i < users.length; i++) {\r\n          if (users[i].socket_id === id) {\r\n              users.splice(i,1)\r\n              user_names.splice(i,1)\r\n              continue\r\n          }\r\n        }\r\n        this.setState({\r\n            users: users,\r\n            user_names: user_names\r\n        })\r\n        console.log(this.state.user_names);\r\n    }\r\n        \r\n    render() {\r\n        return (\r\n            <div className=\"Balloon-Party\">\r\n            <div className=\"Balloon-Background\"/>\r\n\r\n            <div className=\"Game\">\r\n                <div className=\"users\">\r\n\r\n                { this.state.user_names && this.state.user_names.map((user, i) => {\r\n          return <User name={user} key={i} />;\r\n        })}\r\n                </div>\r\n                <input className=\"input-answer\" type=\"text\"></input>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n        }\r\n"]},"metadata":{},"sourceType":"module"}