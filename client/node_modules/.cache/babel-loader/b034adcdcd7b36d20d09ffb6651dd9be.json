{"ast":null,"code":"var _jsxFileName = \"C:\\\\MERN Projects\\\\BombParty\\\\bombparty\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { socket, SocketContext } from '../context/socket';\nimport Message from './Messages/Message';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chat extends React.Component {\n  constructor() {\n    super();\n    this.currentDate = new Date();\n\n    this.handleChange = e => {\n      this.setState({\n        text: e.target.value\n      });\n    };\n\n    this.onSubmitMessage = e => {\n      if (e.keyCode === 13 && e.shiftKey === false && /\\S/.test(this.state.text)) {\n        e.preventDefault();\n        const data = {\n          name: socket.id,\n          time: this.currentDate.timeNow(),\n          type: \"text\",\n          text: this.state.text\n        };\n        this.context.emit('message', data); // add message and reset input\n\n        this.setState({\n          messageList: [...this.state.messageList, data],\n          text: \"\"\n        });\n      }\n    };\n\n    this.state = {\n      text: \"\",\n      messageList: []\n    };\n\n    Date.prototype.timeNow = function () {\n      return (this.getHours() < 10 ? \"0\" : \"\") + this.getHours() + \":\" + (this.getMinutes() < 10 ? \"0\" : \"\") + this.getMinutes();\n    };\n  }\n\n  componentDidMount() {\n    // on user connection to chat\n    this.context.on('user_joined', data => {\n      console.log(data);\n      const message = {\n        name: data,\n        time: this.currentDate.timeNow(),\n        type: 'connection'\n      }; // this.context.emit('message',{\n      //     name : data,\n      //     time : this.currentDate.timeNow(),\n      //     type: 'connection',\n      // });\n\n      this.setState({\n        messageList: [...this.state.messageList, message]\n      });\n    });\n    this.context.on('user_disconnect', data => {\n      this.context.emit('message', {\n        name: this.context.id,\n        time: this.currentDate.timeNow(),\n        type: 'disconnection'\n      });\n    }); // on message received\n\n    this.context.on('message_received', data => {\n      this.setState({\n        messageList: [...this.state.messageList, data]\n      });\n    });\n  } // handles on change input\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: this.state.messageList.map((message, i) => {\n          return /*#__PURE__*/_jsxDEV(Message, {\n            message: message\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"\\u05D4\\u05E7\\u05DC\\u05D3/\\u05D9 \\u05D4\\u05D5\\u05D3\\u05E2\\u05D4\",\n          \"data-placeholder-text\": \"typeHereToChat\",\n          maxLength: \"40\",\n          value: this.state.text,\n          onChange: this.handleChange,\n          onKeyDown: this.onSubmitMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nChat.contextType = SocketContext;\nexport default Chat;","map":{"version":3,"sources":["C:/MERN Projects/BombParty/bombparty/client/src/components/Chat/Chat.js"],"names":["React","useState","useContext","useEffect","socket","SocketContext","Message","Chat","Component","constructor","currentDate","Date","handleChange","e","setState","text","target","value","onSubmitMessage","keyCode","shiftKey","test","state","preventDefault","data","name","id","time","timeNow","type","context","emit","messageList","prototype","getHours","getMinutes","componentDidMount","on","console","log","message","render","map","i","contextType"],"mappings":"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","sourcesContent":["import React, { useState,useContext,useEffect } from 'react';\r\nimport { socket, SocketContext } from '../context/socket';\r\nimport Message from './Messages/Message'\r\nimport './Chat.css'\r\n\r\nclass Chat extends React.Component {\r\n    static contextType = SocketContext;\r\n    currentDate = new Date();\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n          text: \"\",\r\n          messageList: [],\r\n        };\r\n    Date.prototype.timeNow = function () {\r\n        return ((this.getHours() < 10)?\"0\":\"\") + this.getHours() +\":\"+ ((this.getMinutes() < 10)?\"0\":\"\") + this.getMinutes();\r\n        }        \r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n    // on user connection to chat\r\n    this.context.on('user_joined',(data) => {\r\n            console.log(data);\r\n            const message = {\r\n                name : data,\r\n                time : this.currentDate.timeNow(),\r\n                type: 'connection',\r\n            }\r\n            // this.context.emit('message',{\r\n            //     name : data,\r\n            //     time : this.currentDate.timeNow(),\r\n            //     type: 'connection',\r\n            // });\r\n        this.setState({messageList: [...this.state.messageList, message]})\r\n\r\n    })    \r\n    this.context.on('user_disconnect',(data) => {\r\n                this.context.emit('message',{\r\n                    name : this.context.id,\r\n                    time : this.currentDate.timeNow(),\r\n                    type: 'disconnection',\r\n                });\r\n                }) \r\n    // on message received\r\n    this.context.on('message_received',data => { \r\n        this.setState({messageList: [...this.state.messageList, data]})\r\n    })}\r\n\r\n    // handles on change input\r\n    handleChange = (e) => {\r\n        this.setState({text: e.target.value})\r\n    }\r\n    onSubmitMessage = (e) => {\r\n        if(e.keyCode === 13 && e.shiftKey === false && (/\\S/.test(this.state.text))) {\r\n            e.preventDefault();\r\n            const data = {\r\n                name : socket.id,\r\n                time : this.currentDate.timeNow(),\r\n                type: \"text\",\r\n                text: this.state.text\r\n            };\r\n            this.context.emit('message',data);\r\n            // add message and reset input\r\n            this.setState({messageList: [...this.state.messageList, data], text: \"\"})\r\n          }\r\n        }\r\n    render() {\r\n    return (\r\n        <div className=\"Chat\">\r\n        <div className=\"messages\">\r\n        {this.state.messageList.map((message, i) => {\r\n          return <Message message={message} key={i} />;\r\n        })}\r\n        </div>\r\n            <div className=\"input\">\r\n            <textarea placeholder=\"הקלד/י הודעה\" data-placeholder-text=\"typeHereToChat\" maxLength=\"40\" value={this.state.text} onChange={this.handleChange} onKeyDown={this.onSubmitMessage} ></textarea>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n    \r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}