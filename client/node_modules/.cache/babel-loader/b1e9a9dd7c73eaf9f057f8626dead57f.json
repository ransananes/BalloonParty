{"ast":null,"code":"var _jsxFileName = \"C:\\\\MERN Projects\\\\BombParty\\\\bombparty\\\\client\\\\src\\\\components\\\\Chat\\\\Messages\\\\Message.js\";\nimport React, { Component } from 'react';\nimport TextMessage from './TextMessage';\nimport ConnectionMessage from './ConnectionMessage';\nimport './styles/Message.css';\nimport DisconnectionMessage from './DisconnectionMessage';\nimport startMessage from './startMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Message extends Component {\n  _renderMessageOfType(type) {\n    switch (type) {\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(TextMessage, { ...this.props.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 14\n        }, this);\n\n      case 'connection':\n        return /*#__PURE__*/_jsxDEV(ConnectionMessage, { ...this.props.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 14\n        }, this);\n\n      case 'disconnection':\n        return /*#__PURE__*/_jsxDEV(DisconnectionMessage, { ...this.props.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 14\n        }, this);\n\n      case 'gameStart':\n        return /*#__PURE__*/_jsxDEV(DisconnectionMessage, { ...this.props.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 14\n        }, this);\n\n      default:\n        console.error(`Attempting to load message with unsupported file type '${type}'`);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      style: this.props.message.type === \"text\" ? {\n        color: '#ffffff',\n        width: '100%',\n        textAlign: 'right'\n      } : {\n        color: 'rgb(144, 153, 238)',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"name\",\n        dir: \"auto\",\n        children: [this.props.message.type === \"text\" ? this.props.message.name + \":\" : this.props.message.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), this._renderMessageOfType(this.props.message.type), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"time\",\n        dir: \"auto\",\n        style: this.props.message.type === \"text\" ? {\n          display: 'block'\n        } : {\n          display: 'none'\n        },\n        children: [\"  \", this.props.message.time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Message;","map":{"version":3,"sources":["C:/MERN Projects/BombParty/bombparty/client/src/components/Chat/Messages/Message.js"],"names":["React","Component","TextMessage","ConnectionMessage","DisconnectionMessage","startMessage","Message","_renderMessageOfType","type","props","message","console","error","render","color","width","textAlign","name","display","time"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAO,sBAAP;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAE9BM,EAAAA,oBAAoB,CAACC,IAAD,EAAO;AACzB,YAAOA,IAAP;AACA,WAAK,MAAL;AACE,4BAAO,QAAC,WAAD,OAAiB,KAAKC,KAAL,CAAWC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF,WAAK,YAAL;AACE,4BAAO,QAAC,iBAAD,OAAuB,KAAKD,KAAL,CAAWC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF,WAAK,eAAL;AACE,4BAAO,QAAC,oBAAD,OAA0B,KAAKD,KAAL,CAAWC;AAArC;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF,WAAK,WAAL;AACE,4BAAO,QAAC,oBAAD,OAA0B,KAAKD,KAAL,CAAWC;AAArC;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF;AACEC,QAAAA,OAAO,CAACC,KAAR,CAAe,0DAAyDJ,IAAK,GAA7E;AAVF;AAYD;;AAEDK,EAAAA,MAAM,GAAI;AACR,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,OAAX,CAAmBF,IAAnB,KAA4B,MAA5B,GAAqC;AAACM,QAAAA,KAAK,EAAE,SAAR;AAAmBC,QAAAA,KAAK,EAAE,MAA1B;AAAiCC,QAAAA,SAAS,EAAG;AAA7C,OAArC,GAA6F;AAACF,QAAAA,KAAK,EAAE,oBAAR;AAA6BE,QAAAA,SAAS,EAAG;AAAzC,OAA7H;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,GAAG,EAAC,MAA3B;AAAA,mBAAmC,KAAKP,KAAL,CAAWC,OAAX,CAAmBF,IAAnB,KAA4B,MAA5B,GAAqC,KAAKC,KAAL,CAAWC,OAAX,CAAmBO,IAAnB,GAA0B,GAA/D,GAAqE,KAAKR,KAAL,CAAWC,OAAX,CAAmBO,IAA3H;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKV,oBAAL,CAA0B,KAAKE,KAAL,CAAWC,OAAX,CAAmBF,IAA7C,CAFH,eAGI;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,GAAG,EAAC,MAA3B;AAAkC,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,OAAX,CAAmBF,IAAnB,KAA4B,MAA5B,GAAqC;AAACU,UAAAA,OAAO,EAAC;AAAT,SAArC,GAAyD;AAACA,UAAAA,OAAO,EAAC;AAAT,SAAlG;AAAA,yBAAuH,KAAKT,KAAL,CAAWC,OAAX,CAAmBS,IAA1I;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAzB6B;;AA4BhC,eAAeb,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport TextMessage from './TextMessage';\nimport ConnectionMessage from './ConnectionMessage';\nimport './styles/Message.css';\nimport DisconnectionMessage from './DisconnectionMessage';\nimport startMessage from './startMessage';\n\nclass Message extends Component {\n\n  _renderMessageOfType(type) {\n    switch(type) {\n    case 'text':\n      return <TextMessage {...this.props.message} />;\n    case 'connection':\n      return <ConnectionMessage {...this.props.message} />;\n    case 'disconnection':\n      return <DisconnectionMessage {...this.props.message}/>;\n    case 'gameStart':\n      return <DisconnectionMessage {...this.props.message}/>;\n    default:\n      console.error(`Attempting to load message with unsupported file type '${type}'`);\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"message\" style={this.props.message.type === \"text\" ? {color: '#ffffff', width: '100%',textAlign : 'right'} : {color: 'rgb(144, 153, 238)',textAlign : 'center'}}>\n        <span className=\"name\" dir=\"auto\">{this.props.message.type === \"text\" ? this.props.message.name + \":\" : this.props.message.name } </span>\n        {this._renderMessageOfType(this.props.message.type)}\n          <span className=\"time\" dir=\"auto\" style={this.props.message.type === \"text\" ? {display:'block'} : {display:'none'}}>  {this.props.message.time}</span>\n        </div>\n      );\n  }\n}\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}