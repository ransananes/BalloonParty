{"version":3,"sources":["components/Lobby/LobbyMenu.js","components/pages/Lobby.js","components/context/socket.js","components/Chat/Messages/TextMessage.js","components/Chat/Messages/ConnectionMessage.js","components/Chat/Messages/DisconnectionMessage.js","components/Chat/Messages/StartMessage.js","components/Chat/Messages/Message.js","components/Chat/Chat.js","components/Game/Game.js","components/Game/assets/waterballoon.png","components/Game/assets/duck-user.png","components/Game/Users/User.js","components/Game/assets/audio/water_drip.wav","components/Game/assets/audio/water_explode.wav","components/Game/assets/audio/winner_sound_effect.wav","components/Game/assets/audio/water_error.wav","components/pages/Room.js","App.js","index.js"],"names":["withRouter","history","className","type","onKeyDown","e","keyCode","shiftKey","test","target","value","preventDefault","localStorage","setItem","JSON","stringify","nickname","push","Lobby","socket","io","secure","SocketContext","React","createContext","TextMessage","props","properties","text","ConnectionMessage","DisconnectionMessage","StartMessage","time","Message","this","message","console","error","style","color","width","textAlign","dir","name","_renderMessageOfType","display","Component","Chat","currentDate","Date","gameStartMessage","seconds","gameStartInterval","setInterval","setState","messageList","state","clearInterval","handleChange","onSubmitMessage","data","timeNow","context","emit","chatStatus","prototype","getHours","getMinutes","getItem","parse","on","data_msg","user_name","onClick","String","fromCharCode","map","i","placeholder","maxLength","onChange","contextType","balloon_elm","input_elm","current_user","water_drip_sound","water_explosion_sound","water_winner_sound","water_error_sound","timer","User","deg","hp","id","src","duckuser","filter","alt","Game","changeTextValueByID","index","user_names","length","duplicate","reduceHealth","userTurn","undefined","log","syllable","setTimeout","hidden","timePassed","bind","timesUp","userAnimation","document","getElementById","animation","animationDuration","checkIfSyllableExists","timeAddition","j","users","Audio","water_drip","volume","loop","water_explosion","water_winner","water_error","getUserNames","removeDisconnectedUser","socket_id","substring","play","correctAnswer","incorrectAnswer","Winner","updateUserNicknames","user","health","splice","setAttribute","disintegrate","init","classList","add","remove","pause","waterballoon","Provider","App","createBrowserHistory","forceRefresh","exact","path","component","Room","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.47485810.chunk.js","sourcesContent":["import React from 'react'\r\nimport  { withRouter } from 'react-router-dom'\r\n\r\nconst LobbyMenu = ({history}) => {\r\n    function onSubmitName (e) {\r\n        if(e.keyCode === 13 && e.shiftKey === false && (/\\S/.test(e.target.value))) {\r\n            e.preventDefault();\r\n            localStorage.setItem('settings',JSON.stringify({nickname:e.target.value}))\r\n            history.push(\"/room\");\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=\"name-input\">\r\n            <input type=\"text\" onKeyDown={onSubmitName}></input>            \r\n                  </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(LobbyMenu)\r\n","import React from 'react'\r\nimport LobbyMenu from '../Lobby/LobbyMenu'\r\nfunction Lobby() {\r\n    return (\r\n        <div>\r\n            <LobbyMenu/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lobby\r\n","import io from \"socket.io-client\";\r\nimport React from 'react';\r\n\r\nexport const SOCKET_URL = \"https://balloonparty.herokuapp.com/\";\r\nexport const socket = io(SOCKET_URL, { secure: true });\r\nexport const SocketContext = React.createContext(socket);\r\n","import React from 'react';\nimport Linkify from 'react-linkify';\n\n\nconst TextMessage = (props) => {\n  return <div className=\"message-text\">{\n    \n      <Linkify properties={{ target: '_blank' }}> {props.text}</Linkify>\n    }</div>;\n}\nexport default TextMessage;\n","import React from 'react';\n\n\nconst ConnectionMessage = (props) => {\n  return <div className=\"message-connection\"> הצטרפ/ה לחדר </div>;\n};\n\nexport default ConnectionMessage;\n","import React from 'react';\n\n\nconst DisconnectionMessage = (props) => {\n  return <div className=\"message-disconnect\"> עזב/ה את החדר </div>;\n};\n\nexport default DisconnectionMessage;\n","import React from 'react';\r\n\r\n\r\nconst StartMessage = (props) => {\r\n  return <div className=\"message-game-start\">\r\n    {props.time === 0 ? \" המשחק התחיל\" : \" המשחק יתחיל בעוד\" + \" \\t\" +props.time}\r\n     </div>;\r\n}\r\nexport default StartMessage;\r\n","import React, { Component } from 'react';\nimport TextMessage from './TextMessage';\nimport ConnectionMessage from './ConnectionMessage';\nimport './styles/Message.css';\nimport DisconnectionMessage from './DisconnectionMessage';\nimport StartMessage from './StartMessage';\n\nclass Message extends Component {\n\n  _renderMessageOfType(type) {\n    switch(type) {\n    case 'text':\n      return <TextMessage {...this.props.message} />;\n    case 'connection':\n      return <ConnectionMessage {...this.props.message} />;\n    case 'disconnection':\n      return <DisconnectionMessage {...this.props.message}/>;\n    case 'gameStart':\n      return <StartMessage {...this.props.message}/>;\n    default:\n      console.error(`Attempting to load message with unsupported file type '${type}'`);\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"message\" style={this.props.message.type === \"text\" ? {color: '#ffffff', width: '100%',textAlign : 'right'} : {color: 'rgb(144, 153, 238)',textAlign : 'center'}}>\n        <span className=\"name\" dir=\"auto\">{this.props.message.type === \"text\" ? this.props.message.name + \":\" : this.props.message.name } </span>\n        {this._renderMessageOfType(this.props.message.type)}\n          <span className=\"time\" dir=\"auto\" style={this.props.message.type === \"text\" ? {display:'block'} : {display:'none'}}>  {this.props.message.time}</span>\n        </div>\n      );\n  }\n}\n\nexport default Message;\n","import React from 'react';\r\nimport { SocketContext } from '../context/socket';\r\nimport Message from './Messages/Message'\r\nimport './Chat.css'\r\n\r\nclass Chat extends React.Component {\r\n    static contextType = SocketContext;\r\n    nickname = \"רן המלך\";\r\n    currentDate = new Date();\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n          text: \"\",\r\n          messageList: [],\r\n          chatStatus: false,\r\n        };\r\n    // eslint-disable-next-line \r\n    Date.prototype.timeNow = function () {\r\n        return ((this.getHours() < 10)?\"0\":\"\") + this.getHours() +\":\"+ ((this.getMinutes() < 10)?\"0\":\"\") + this.getMinutes();\r\n        }        \r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if(localStorage.getItem('settings')) {\r\n            this.nickname = JSON.parse(localStorage.getItem('settings')).nickname;\r\n        }\r\n        const message = {\r\n            name : this.nickname,\r\n            time : this.currentDate.timeNow(),\r\n            type: 'connection',\r\n        }\r\n    // on user connection to chat\r\n    this.context.on('user_connected',() => {\r\n        this.context.emit('user_joined_sent',message);\r\n    })\r\n\r\n    this.context.on('user_joined_received', (data) => {\r\n        this.setState({messageList: [...this.state.messageList, data.data_msg]})\r\n    }) \r\n    this.context.on('user_disconnect',(data) => {\r\n            const message = {\r\n                name : data.user_name,\r\n                time : this.currentDate.timeNow(),\r\n                type: 'disconnection',\r\n            }\r\n            //💥 🌊\r\n            this.setState({messageList: [...this.state.messageList, message]})\r\n            }) \r\n    // on message received\r\n    this.context.on('message_received',data => { \r\n        this.setState({messageList: [...this.state.messageList, data]})\r\n    })\r\n    // starts game \r\n    this.context.on('Starting Game', () => this.gameStartMessage(3));\r\n    // changes chat name\r\n    this.context.on('updatechatnick', (data) => {\r\n        this.nickname = data; localStorage.setItem('settings',JSON.stringify({nickname:data}))\r\n    })\r\n}\r\n        // handle game Start message\r\n    gameStartMessage = (seconds) => {\r\n        const gameStartInterval = setInterval(()=>{\r\n            if(seconds > 0)\r\n            {\r\n            const message = {\r\n                time: seconds,\r\n                type: 'gameStart',\r\n            }\r\n            this.setState({messageList: [...this.state.messageList, message]});\r\n        }\r\n            // clears on game start\r\n            else\r\n            {\r\n                clearInterval(gameStartInterval);\r\n                const message = {\r\n                    time:0,\r\n                    type: 'gameStart',\r\n                }\r\n                this.setState({messageList: [...this.state.messageList, message]});\r\n            }\r\n            seconds--;\r\n         }, 1000);\r\n    }\r\n    // handles on change input\r\n    handleChange = (e) => {\r\n        this.setState({text: e.target.value})\r\n    }\r\n    onSubmitMessage = (e) => {\r\n        if(e.keyCode === 13 && e.shiftKey === false && (/\\S/.test(this.state.text))) {\r\n            e.preventDefault();\r\n            const data = {\r\n                name : this.nickname,\r\n                time : this.currentDate.timeNow(),\r\n                type: \"text\",\r\n                text: this.state.text\r\n            };\r\n            this.context.emit('message',data);\r\n            // add message and reset input\r\n            this.setState({messageList: [...this.state.messageList, data], text: \"\"})\r\n          }\r\n        }\r\n    render() {\r\n    return (\r\n        <div className=\"Chat\" style={this.state.chatStatus === false ? {display: 'flex'} : {width:'2%'}}>\r\n            <button className=\"chat-option\" onClick={() => this.setState({chatStatus: !this.state.chatStatus})}> {String.fromCharCode(8592)}</button>\r\n        <div className=\"messages\" style={this.state.chatStatus === false ? {display: 'block'} : {display:'none'}}>\r\n        {this.state.messageList.map((message, i) => {\r\n          return <Message message={message} key={i} />;\r\n        })}\r\n        </div>\r\n            <div className=\"input\" style={this.state.chatStatus === false ? {display: 'block'} : {display:'none'}}>\r\n            <textarea placeholder=\"הקלד/י הודעה\" data-placeholder-text=\"typeHereToChat\" maxLength=\"40\" value={this.state.text} onChange={this.handleChange} onKeyDown={this.onSubmitMessage} ></textarea>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n    \r\nexport default Chat;\r\n","import React, { Component } from 'react'\r\n\r\nimport './Game.css'\r\nimport {socket, SocketContext} from '../../components/context/socket'\r\nimport waterballoon from './assets/waterballoon.png'\r\nimport User from './Users/User';\r\n// sound\r\nimport water_drip from './assets/audio/water_drip.wav'\r\nimport water_explosion from './assets/audio/water_explode.wav'\r\nimport water_winner from './assets/audio/winner_sound_effect.wav'\r\nimport water_error from './assets/audio/water_error.wav'\r\n\r\n\r\nimport disintegrate from 'disintegrate'\r\nvar balloon_elm, input_elm,current_user, water_drip_sound, water_explosion_sound,water_winner_sound,water_error_sound, timer;\r\nconst max_seconds = 13000;\r\nconst correctAnswer_time = 2000;\r\nexport default class Game extends Component {\r\n    static contextType = SocketContext;\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            users: [],\r\n            user_names: [],\r\n            text: \"\",\r\n            syllable: \"\",\r\n            timePassed: 0,\r\n          };\r\n    }\r\n    \r\n    componentDidMount(){\r\n        // get balloon element\r\n        balloon_elm = document.getElementById('balloon');\r\n\r\n        // get input element\r\n        input_elm = document.getElementById('input');\r\n        \r\n        // declaring audios\r\n        water_drip_sound = new Audio(water_drip);\r\n        water_drip_sound.volume = 0.05;\r\n        water_drip_sound.loop = true;\r\n\r\n        water_explosion_sound = new Audio(water_explosion);\r\n        water_explosion_sound.volume = 0.3;\r\n        \r\n        water_winner_sound = new Audio(water_winner);\r\n        water_winner_sound.volume = 0.2;\r\n\r\n        water_error_sound = new Audio(water_error);\r\n        water_error_sound.volume = 0.2;\r\n        this.context.on(\"user_joined_received\", data => {\r\n            this.setState({users:data.users, syllable:data.syllable})\r\n            this.setState({user_names: this.getUserNames(data.users)})\r\n        })\r\n        this.context.on('user_disconnect',(data) => {this.removeDisconnectedUser(data.socket_id)})\r\n\r\n        // gets syllable\r\n        this.context.on('Starting Game', (data) => {\r\n            //this.setState({currentTime: data.roundTime});\r\n            // resets timer if possible\r\n            try{clearInterval(timer);}\r\n            catch{\r\n                // do nothing\r\n            }\r\n            this.setState({users:data.users,user_names: this.getUserNames(data.users)})\r\n            setTimeout(function () {data.syllable = data.syllable.substring(0, data.syllable.length - 1); water_drip_sound.play(); this.setState({syllable:data.syllable})}.bind(this),3500)\r\n            \r\n            //const timesUpFunc = this.timesUp.bind(this);\r\n            //roundTimer = setInterval(timesUpFunc, data.roundTime*1000);\r\n        })\r\n        this.context.on('Turn', (data) => {this.userTurn(data)})\r\n        // on socket user_animation\r\n        this.context.on('user_animated', (data) => {this.userAnimation(data)})\r\n        // update users input \r\n        this.context.on('updateTextInputs', (data) => {this.changeTextValueByID(data.id,data.value)})\r\n        this.context.on('correctAnswer', (data) => {data = data.substring(0, data.length - 1); this.correctAnswer(data)})\r\n        this.context.on('incorrectAnswer', () => this.incorrectAnswer())\r\n        this.context.on('setWaterBalloonExplosion', () => this.timesUp(false));\r\n        this.context.on('lostHP', (data) => this.reduceHealth(data))\r\n        this.context.on('Winner', (data) => this.Winner(data))\r\n\r\n        this.context.on('updateNickNames', (data) => this.updateUserNicknames(data))\r\n    }   \r\n    getUserNames(data) {\r\n        let user_names = [];\r\n        for (var i = 0; i < data.length; i++) {\r\n                let id = data[i].socket_id;\r\n                let name = data[i].name;\r\n                let health = data[i].health;\r\n                let text = \"\";\r\n                const user = {id: id,name: name, text: text,hp:health}\r\n                user_names.push(user);\r\n            }\r\n        return user_names;\r\n    }\r\n     removeDisconnectedUser(id) {\r\n        let users = this.state.users;\r\n        let user_names = this.state.user_names;\r\n        for (var i = 0; i < users.length; i++) {\r\n          if (users[i].socket_id === id) {\r\n              users.splice(i,1)\r\n              user_names.splice(i,1)\r\n              continue\r\n          }\r\n        }\r\n        this.setState({\r\n            users: users,\r\n            user_names: user_names\r\n        })\r\n    }\r\n    changeTextValueByID = (id,text) =>  {\r\n        for (let index = 0; index < this.state.user_names.length; index++) {\r\n            if(this.state.user_names[index]['id'] === id)\r\n            {\r\n                let duplicate = this.state.user_names;\r\n                duplicate[index]['text'] = text;\r\n                this.setState({user_names: duplicate});\r\n            }\r\n        }\r\n\r\n    }\r\n    reduceHealth = (id) => {\r\n        for (let index = 0; index < this.state.user_names.length; index++) {\r\n            if(this.state.user_names[index]['id'] === id)\r\n            {\r\n                let duplicate = this.state.user_names;\r\n                duplicate[index]['hp']--;\r\n                this.setState({user_names: duplicate});\r\n            }\r\n        }\r\n        \r\n    }\r\n    //handles user turn\r\n    userTurn = (data) => {\r\n        if (data == undefined) data = 0;\r\n        console.log(this.state.syllable);\r\n        setTimeout(function () {\r\n            // shows input elemn\r\n            input_elm.hidden = false; \r\n            this.setState({timePassed: this.state.timePassed-data})}.bind(this),500)\r\n            timer = setInterval(function() {\r\n            this.setState({timePassed: this.state.timePassed+1000})\r\n            if(this.state.timePassed >= max_seconds)\r\n            {\r\n                this.setState({timePassed: 0})\r\n                this.timesUp(true)\r\n                clearInterval(timer);\r\n            }\r\n            }.bind(this), 1000);\r\n            \r\n        \r\n        socket.emit('user_animation', this.context.id);\r\n    }\r\n    // handles user animation\r\n    userAnimation = (data) => {\r\n        if(input_elm.hidden === true) \r\n        {\r\n            let user_elm_prev = document.getElementById(this.context.id);\r\n            user_elm_prev.style.animation='';\r\n        }\r\n        current_user = document.getElementById(data);\r\n        current_user.style.animation='heartBeat infinite';\r\n        current_user.style.animationDuration='2s';\r\n    }\r\n    // handles on answer change input\r\n    handleChange = (e) => {\r\n        this.changeTextValueByID(this.context.id,e.target.value);\r\n        const data = {id : this.context.id, value : e.target.value}\r\n        this.context.emit('changedTextValue',data)\r\n        this.setState({text: e.target.value})\r\n    }\r\n    // submits answer\r\n    onSubmitMessage = (e) => {\r\n        if(e.keyCode === 13 && e.shiftKey === false && (/\\S/.test(this.state.text))) {\r\n            e.preventDefault();\r\n            if (this.checkIfSyllableExists(this.state.text,this.state.syllable))\r\n            {\r\n            const data = { text: this.state.text, timeAddition: timer+correctAnswer_time}\r\n            this.context.emit('checkAnswer',data);\r\n            }\r\n            else\r\n            {\r\n             this.context.emit('wrongAnswer');\r\n            }\r\n          }\r\n        }\r\n        // hebrew includes function, can't use js includes\r\n        checkIfSyllableExists= (text,syllable) => {\r\n            if(text.length >= syllable.length)\r\n            {\r\n            for (let index = 0; index < text.length; index++) {\r\n                if(text[index] === syllable[0])\r\n                {\r\n                    for (let j = 1; j < syllable.length; j++) {\r\n                        if(syllable[j] !== text[j]) break;\r\n                        if(syllable.length-1 === j)\r\n                            return true;\r\n                    }\r\n                }                \r\n            }\r\n        }\r\n        return false;\r\n        }\r\n        correctAnswer (syllable) {\r\n            this.setState({text: \"\",syllable:syllable});\r\n            this.changeTextValueByID(this.context.id,\"\");\r\n            const data = {id : this.context.id, value : \"\"}\r\n            this.context.emit('changedTextValue',data)\r\n            // checks if current turn \r\n            if(current_user !== undefined) current_user.style.animation='';\r\n            input_elm.hidden = true;\r\n            //resets timer;\r\n            clearInterval(timer);\r\n            \r\n        }\r\n        incorrectAnswer () {\r\n            balloon_elm.style.animation='';\r\n            balloon_elm.style.animation='shake 0.5s infinite';\r\n            water_error_sound.play();\r\n            setTimeout(function () {balloon_elm.style.animation='shake 4s infinite';},500)\r\n        }\r\n        timesUp (emit) {\r\n            console.log(\"timesup\");\r\n            balloon_elm.style.animation='';\r\n            // exploding water animation\r\n            balloon_elm.setAttribute('data-dis-type',\"self-contained\")\r\n            balloon_elm.setAttribute('data-dis-particle-type','ExplodingParticle')\r\n            balloon_elm.setAttribute('data-dis-reduction-factor','100')\r\n            balloon_elm.setAttribute('data-dis-color','[90, 169, 235]')\r\n            disintegrate.init();\r\n            balloon_elm.classList.add(\"animate\")\r\n            setTimeout(function () {\r\n                balloon_elm.classList.remove(\"animate\"); water_explosion_sound.play();\r\n                if(emit){\r\n                    this.context.emit('startNewTurn') \r\n                }\r\n            }.bind(this),1300)\r\n            if(emit)\r\n            this.context.emit('timesUp')\r\n\r\n\r\n            \r\n\r\n        }\r\n        Winner() {\r\n            clearInterval(timer);\r\n            water_drip_sound.pause();\r\n            water_winner_sound.play();\r\n        }\r\n        updateUserNicknames (data) { \r\n            for (var i = 0; i < this.state.user_names.length; i++) {\r\n                if(data.id == this.state.user_names[i].id)\r\n                {\r\n                var duplicate = this.state.user_names;\r\n                duplicate[i].name = data.nickname;\r\n                this.setState({user_names : duplicate})\r\n                }\r\n            }\r\n        }\r\n    render() {\r\n        return (\r\n            <div className=\"Balloon-Party\">\r\n\r\n            <div className=\"Game\" id=\"game\"> \r\n                <span className=\"syllable-txt\">{this.state.syllable}</span>\r\n                <img className=\"balloon\" id=\"balloon\" src={waterballoon} alt=\"Balloon\"/>\r\n                <div className=\"users\">\r\n\r\n                { this.state.user_names && this.state.user_names.map(user  => {\r\n                return <User key={user.id} id={user.id} hp={user.hp} name={user.name}  text={user.text} />;\r\n        })}\r\n                </div>\r\n                <div id=\"input\" className=\"input-answer\" hidden>\r\n                <textarea placeholder=\"הקלד/י תשובה\" data-placeholder-text=\"typeheretoanswer\" maxLength=\"40\" value={this.state.text} onChange={this.handleChange} onKeyDown={this.onSubmitMessage} ></textarea>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n        }\r\n","export default __webpack_public_path__ + \"static/media/waterballoon.7aca84cc.png\";","export default __webpack_public_path__ + \"static/media/duck-user.41cabf10.png\";","import React, {Component} from 'react';\r\nimport duckuser from '../assets/duck-user.png'\r\nimport './User.css'\r\n\r\nclass User extends Component {\r\n    render () {\r\n        let deg = 0;\r\n    switch(this.props.hp){\r\n        case 3:\r\n          deg = 0\r\n          break;\r\n        case 2:\r\n          deg = 170\r\n          break;\r\n        case 1:\r\n            deg = 180\r\n        case 0: \r\n            deg = 77\r\n        default:\r\n            deg = 0\r\n      }\r\n  //  let deg = 45 ;\r\n//    const circle_users = 'transform: rotate('+deg+ ')translateX(100px)'\r\n    //transform: `rotate(${deg}deg) rotate(-${deg}deg)`\r\n    return (\r\n        <div className=\"user\" id={this.props.id}>\r\n            <span className=\"name\" dir=\"auto\">{this.props.name}</span>\r\n            \r\n            <img className=\"avatar\" src={duckuser} style={{filter: 'hue-rotate('+deg+'deg)'}} alt={this.props.name}/>\r\n            <span className=\"input\" dir=\"auto\">{this.props.text}</span>\r\n\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default User\r\n","export default __webpack_public_path__ + \"static/media/water_drip.803a298a.wav\";","export default __webpack_public_path__ + \"static/media/water_explode.139eea49.wav\";","export default __webpack_public_path__ + \"static/media/winner_sound_effect.42321c98.wav\";","export default __webpack_public_path__ + \"static/media/water_error.84b2cce7.wav\";","import React from 'react'\r\nimport Chat from '../../components/Chat/Chat'\r\nimport Game from '../../components/Game/Game'\r\nimport {SocketContext, socket} from '../../components/context/socket';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction Room() {\r\n    return (\r\n        <div>\r\n        <SocketContext.Provider value={socket}>\r\n        <Game/>\r\n        <Chat/>\r\n      </SocketContext.Provider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Room)\r\n","import React from 'react';\r\nimport {Router, Route, Switch } from 'react-router-dom';\r\nimport { createBrowserHistory } from \"history\";\r\nimport Lobby from './components/pages/Lobby';\r\nimport Room from './components/pages/Room';\r\nfunction App() {\r\n  const history = createBrowserHistory({forceRefresh:true});\r\n  return (\r\n    <div>\r\n        <Router history={history}>\r\n        <Switch>\r\n        <Route exact path='/lobby' component={Lobby}/>\r\n        <Route exact path='/room' component={Room} />\r\n        <Route component={Room}/>\r\n      </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n</React.StrictMode>,\ndocument.getElementById('root')\n);\n\n"],"sourceRoot":""}