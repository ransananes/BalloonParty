{"version":3,"sources":["components/context/socket.js","components/Chat/Messages/TextMessage.js","components/Chat/Messages/ConnectionMessage.js","components/Chat/Messages/DisconnectionMessage.js","components/Chat/Messages/StartMessage.js","components/Chat/Messages/Message.js","components/Chat/Chat.js","components/Game/Game.js","components/Game/assets/waterballoon.png","components/Game/assets/duck-user.png","components/Game/Users/User.js","components/Game/assets/audio/water_drip.wav","components/Game/assets/audio/water_explode.wav","components/Game/assets/audio/winner_sound_effect.wav","components/Game/assets/audio/water_error.wav","components/pages/Room.js","App.js","index.js"],"names":["socket","io","secure","SocketContext","React","createContext","TextMessage","props","className","properties","target","text","ConnectionMessage","DisconnectionMessage","StartMessage","time","Message","type","this","message","console","error","style","color","width","textAlign","dir","name","_renderMessageOfType","display","Component","Chat","nickname","JSON","parse","localStorage","getItem","currentDate","Date","gameStartMessage","seconds","gameStartInterval","setInterval","setState","messageList","state","clearInterval","handleChange","e","value","onSubmitMessage","keyCode","shiftKey","test","preventDefault","data","timeNow","context","emit","chatStatus","prototype","getHours","getMinutes","on","data_msg","user_name","onClick","String","fromCharCode","map","i","placeholder","maxLength","onChange","onKeyDown","contextType","balloon_elm","input_elm","current_user","water_drip_sound","water_explosion_sound","water_winner_sound","water_error_sound","timer","User","deg","hp","id","src","duckuser","filter","alt","Game","changeTextValueByID","index","user_names","length","duplicate","reduceHealth","userTurn","undefined","setTimeout","hidden","timePassed","bind","timesUp","userAnimation","document","getElementById","animation","animationDuration","checkIfSyllableExists","syllable","timeAddition","j","users","Audio","water_drip","volume","loop","water_explosion","water_winner","water_error","getUserNames","removeDisconnectedUser","socket_id","substring","play","correctAnswer","incorrectAnswer","Winner","user","health","push","splice","log","setAttribute","disintegrate","init","classList","add","remove","pause","waterballoon","withRouter","Provider","App","history","createBrowserHistory","forceRefresh","exact","path","component","Room","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e9151852.chunk.js","sourcesContent":["import io from \"socket.io-client\";\r\nimport React from 'react';\r\n\r\nexport const SOCKET_URL = \"https://balloonparty.herokuapp.com/\";\r\nexport const socket = io(SOCKET_URL, { secure: true });\r\nexport const SocketContext = React.createContext(socket);\r\n","import React from 'react';\nimport Linkify from 'react-linkify';\n\n\nconst TextMessage = (props) => {\n  return <div className=\"message-text\">{\n    \n      <Linkify properties={{ target: '_blank' }}> {props.text}</Linkify>\n    }</div>;\n}\nexport default TextMessage;\n","import React from 'react';\n\n\nconst ConnectionMessage = (props) => {\n  return <div className=\"message-connection\"> הצטרפ/ה לחדר </div>;\n};\n\nexport default ConnectionMessage;\n","import React from 'react';\n\n\nconst DisconnectionMessage = (props) => {\n  return <div className=\"message-disconnect\"> עזב/ה את החדר </div>;\n};\n\nexport default DisconnectionMessage;\n","import React from 'react';\r\n\r\n\r\nconst StartMessage = (props) => {\r\n  return <div className=\"message-game-start\">\r\n    {props.time === 0 ? \" המשחק התחיל\" : \" המשחק יתחיל בעוד\" + \" \\t\" +props.time}\r\n     </div>;\r\n}\r\nexport default StartMessage;\r\n","import React, { Component } from 'react';\nimport TextMessage from './TextMessage';\nimport ConnectionMessage from './ConnectionMessage';\nimport './styles/Message.css';\nimport DisconnectionMessage from './DisconnectionMessage';\nimport StartMessage from './StartMessage';\n\nclass Message extends Component {\n\n  _renderMessageOfType(type) {\n    switch(type) {\n    case 'text':\n      return <TextMessage {...this.props.message} />;\n    case 'connection':\n      return <ConnectionMessage {...this.props.message} />;\n    case 'disconnection':\n      return <DisconnectionMessage {...this.props.message}/>;\n    case 'gameStart':\n      return <StartMessage {...this.props.message}/>;\n    default:\n      console.error(`Attempting to load message with unsupported file type '${type}'`);\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"message\" style={this.props.message.type === \"text\" ? {color: '#ffffff', width: '100%',textAlign : 'right'} : {color: 'rgb(144, 153, 238)',textAlign : 'center'}}>\n        <span className=\"name\" dir=\"auto\">{this.props.message.type === \"text\" ? this.props.message.name + \":\" : this.props.message.name } </span>\n        {this._renderMessageOfType(this.props.message.type)}\n          <span className=\"time\" dir=\"auto\" style={this.props.message.type === \"text\" ? {display:'block'} : {display:'none'}}>  {this.props.message.time}</span>\n        </div>\n      );\n  }\n}\n\nexport default Message;\n","import React from 'react';\r\nimport { SocketContext } from '../context/socket';\r\nimport Message from './Messages/Message'\r\nimport './Chat.css'\r\n\r\nclass Chat extends React.Component {\r\n    static contextType = SocketContext;\r\n    nickname = JSON.parse(localStorage.getItem('settings')).nickname;\r\n    currentDate = new Date();\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n          text: \"\",\r\n          messageList: [],\r\n          chatStatus: false,\r\n        };\r\n    // eslint-disable-next-line \r\n    Date.prototype.timeNow = function () {\r\n        return ((this.getHours() < 10)?\"0\":\"\") + this.getHours() +\":\"+ ((this.getMinutes() < 10)?\"0\":\"\") + this.getMinutes();\r\n        }        \r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const message = {\r\n            name : this.nickname,\r\n            time : this.currentDate.timeNow(),\r\n            type: 'connection',\r\n        }\r\n    // on user connection to chat\r\n    this.context.on('user_connected',() => {\r\n        this.context.emit('user_joined_sent',message);\r\n    })\r\n\r\n    this.context.on('user_joined_received', (data) => {\r\n        this.setState({messageList: [...this.state.messageList, data.data_msg]})\r\n    }) \r\n    this.context.on('user_disconnect',(data) => {\r\n            const message = {\r\n                name : data.user_name,\r\n                time : this.currentDate.timeNow(),\r\n                type: 'disconnection',\r\n            }\r\n            //💥 🌊\r\n            this.setState({messageList: [...this.state.messageList, message]})\r\n            }) \r\n    // on message received\r\n    this.context.on('message_received',data => { \r\n        this.setState({messageList: [...this.state.messageList, data]})\r\n    })\r\n    // starts game \r\n    this.context.on('Starting Game', () => this.gameStartMessage(3));\r\n}\r\n        // handle game Start message\r\n    gameStartMessage = (seconds) => {\r\n        const gameStartInterval = setInterval(()=>{\r\n            if(seconds > 0)\r\n            {\r\n            const message = {\r\n                time: seconds,\r\n                type: 'gameStart',\r\n            }\r\n            this.setState({messageList: [...this.state.messageList, message]});\r\n        }\r\n            // clears on game start\r\n            else\r\n            {\r\n                clearInterval(gameStartInterval);\r\n                const message = {\r\n                    time:0,\r\n                    type: 'gameStart',\r\n                }\r\n                this.setState({messageList: [...this.state.messageList, message]});\r\n            }\r\n            seconds--;\r\n         }, 1000);\r\n    }\r\n    // handles on change input\r\n    handleChange = (e) => {\r\n        this.setState({text: e.target.value})\r\n    }\r\n    onSubmitMessage = (e) => {\r\n        if(e.keyCode === 13 && e.shiftKey === false && (/\\S/.test(this.state.text))) {\r\n            e.preventDefault();\r\n            const data = {\r\n                name : this.nickname,\r\n                time : this.currentDate.timeNow(),\r\n                type: \"text\",\r\n                text: this.state.text\r\n            };\r\n            this.context.emit('message',data);\r\n            // add message and reset input\r\n            this.setState({messageList: [...this.state.messageList, data], text: \"\"})\r\n          }\r\n        }\r\n    render() {\r\n    return (\r\n        <div className=\"Chat\" style={this.state.chatStatus === false ? {display: 'flex'} : {width:'2%'}}>\r\n            <button className=\"chat-option\" onClick={() => this.setState({chatStatus: !this.state.chatStatus})}> {String.fromCharCode(8592)}</button>\r\n        <div className=\"messages\" style={this.state.chatStatus === false ? {display: 'block'} : {display:'none'}}>\r\n        {this.state.messageList.map((message, i) => {\r\n          return <Message message={message} key={i} />;\r\n        })}\r\n        </div>\r\n            <div className=\"input\" style={this.state.chatStatus === false ? {display: 'block'} : {display:'none'}}>\r\n            <textarea placeholder=\"הקלד/י הודעה\" data-placeholder-text=\"typeHereToChat\" maxLength=\"40\" value={this.state.text} onChange={this.handleChange} onKeyDown={this.onSubmitMessage} ></textarea>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n    \r\nexport default Chat;\r\n","import React, { Component } from 'react'\r\n\r\nimport './Game.css'\r\nimport {socket, SocketContext} from '../../components/context/socket'\r\nimport waterballoon from './assets/waterballoon.png'\r\nimport User from './Users/User';\r\n// sound\r\nimport water_drip from './assets/audio/water_drip.wav'\r\nimport water_explosion from './assets/audio/water_explode.wav'\r\nimport water_winner from './assets/audio/winner_sound_effect.wav'\r\nimport water_error from './assets/audio/water_error.wav'\r\n\r\n\r\nimport disintegrate from 'disintegrate'\r\nvar balloon_elm, input_elm,current_user, water_drip_sound, water_explosion_sound,water_winner_sound,water_error_sound, timer;\r\nconst max_seconds = 13000;\r\nconst correctAnswer_time = 2000;\r\nexport default class Game extends Component {\r\n    static contextType = SocketContext;\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            users: [],\r\n            user_names: [],\r\n            text: \"\",\r\n            syllable: \"\",\r\n            timePassed: 0,\r\n          };\r\n    }\r\n    \r\n    componentDidMount(){\r\n        // get balloon element\r\n        balloon_elm = document.getElementById('balloon');\r\n\r\n        // get input element\r\n        input_elm = document.getElementById('input');\r\n        \r\n        // declaring audios\r\n        water_drip_sound = new Audio(water_drip);\r\n        water_drip_sound.volume = 0.05;\r\n        water_drip_sound.loop = true;\r\n\r\n        water_explosion_sound = new Audio(water_explosion);\r\n        water_explosion_sound.volume = 0.3;\r\n        \r\n        water_winner_sound = new Audio(water_winner);\r\n        water_winner_sound.volume = 0.2;\r\n\r\n        water_error_sound = new Audio(water_error);\r\n        water_error_sound.volume = 0.2;\r\n        this.context.on(\"user_joined_received\", data => {\r\n            this.setState({users:data.users, syllable:data.syllable})\r\n            this.setState({user_names: this.getUserNames(data.users)})\r\n        })\r\n        this.context.on('user_disconnect',(data) => {this.removeDisconnectedUser(data.socket_id)})\r\n\r\n        // gets syllable\r\n        this.context.on('Starting Game', (data) => {\r\n            //this.setState({currentTime: data.roundTime});\r\n            // resets timer if possible\r\n            try{clearInterval(timer);}\r\n            catch{\r\n                // do nothing\r\n            }\r\n            this.setState({users:data.users,user_names: this.getUserNames(data.users)})\r\n            setTimeout(function () {data.syllable = data.syllable.substring(0, data.syllable.length - 1); water_drip_sound.play(); this.setState({syllable:data.syllable})}.bind(this),3500)\r\n            \r\n            //const timesUpFunc = this.timesUp.bind(this);\r\n            //roundTimer = setInterval(timesUpFunc, data.roundTime*1000);\r\n        })\r\n        this.context.on('Turn', (data) => {this.userTurn(data)})\r\n        // on socket user_animation\r\n        this.context.on('user_animated', (data) => {this.userAnimation(data)})\r\n        // update users input \r\n        this.context.on('updateTextInputs', (data) => {this.changeTextValueByID(data.id,data.value)})\r\n        this.context.on('correctAnswer', (data) => {data = data.substring(0, data.length - 1); this.correctAnswer(data)})\r\n        this.context.on('incorrectAnswer', () => this.incorrectAnswer())\r\n        this.context.on('setWaterBalloonExplosion', () => this.timesUp(false));\r\n        this.context.on('lostHP', (data) => this.reduceHealth(data))\r\n        this.context.on('Winner', (data) => this.Winner(data))\r\n    }   \r\n    getUserNames(data) {\r\n        let user_names = [];\r\n        for (var i = 0; i < data.length; i++) {\r\n                let id = data[i].socket_id;\r\n                let name = data[i].name;\r\n                let health = data[i].health;\r\n                let text = \"\";\r\n                const user = {id: id,name: name, text: text,hp:health}\r\n                user_names.push(user);\r\n            }\r\n        return user_names;\r\n    }\r\n     removeDisconnectedUser(id) {\r\n        let users = this.state.users;\r\n        let user_names = this.state.user_names;\r\n        for (var i = 0; i < users.length; i++) {\r\n          if (users[i].socket_id === id) {\r\n              users.splice(i,1)\r\n              user_names.splice(i,1)\r\n              continue\r\n          }\r\n        }\r\n        this.setState({\r\n            users: users,\r\n            user_names: user_names\r\n        })\r\n    }\r\n    changeTextValueByID = (id,text) =>  {\r\n        for (let index = 0; index < this.state.user_names.length; index++) {\r\n            if(this.state.user_names[index]['id'] === id)\r\n            {\r\n                let duplicate = this.state.user_names;\r\n                duplicate[index]['text'] = text;\r\n                this.setState({user_names: duplicate});\r\n            }\r\n        }\r\n\r\n    }\r\n    reduceHealth = (id) => {\r\n        for (let index = 0; index < this.state.user_names.length; index++) {\r\n            if(this.state.user_names[index]['id'] === id)\r\n            {\r\n                let duplicate = this.state.user_names;\r\n                duplicate[index]['hp']--;\r\n                this.setState({user_names: duplicate});\r\n            }\r\n        }\r\n        \r\n    }\r\n    //handles user turn\r\n    userTurn = (data) => {\r\n        if (data == undefined) data = 0;\r\n\r\n        setTimeout(function () {\r\n            // shows input elemn\r\n            input_elm.hidden = false; \r\n            this.setState({timePassed: this.state.timePassed-data})}.bind(this),500)\r\n            timer = setInterval(function() {\r\n            this.setState({timePassed: this.state.timePassed+1000})\r\n            if(this.state.timePassed >= max_seconds)\r\n            {\r\n                this.setState({timePassed: 0})\r\n                this.timesUp(true)\r\n                clearInterval(timer);\r\n            }\r\n            }.bind(this), 1000);\r\n            \r\n        \r\n        socket.emit('user_animation', this.context.id);\r\n    }\r\n    // handles user animation\r\n    userAnimation = (data) => {\r\n        if(input_elm.hidden === true) \r\n        {\r\n            let user_elm_prev = document.getElementById(this.context.id);\r\n            user_elm_prev.style.animation='';\r\n        }\r\n        current_user = document.getElementById(data);\r\n        current_user.style.animation='heartBeat infinite';\r\n        current_user.style.animationDuration='2s';\r\n    }\r\n    // handles on answer change input\r\n    handleChange = (e) => {\r\n        this.changeTextValueByID(this.context.id,e.target.value);\r\n        const data = {id : this.context.id, value : e.target.value}\r\n        this.context.emit('changedTextValue',data)\r\n        this.setState({text: e.target.value})\r\n    }\r\n    // submits answer\r\n    onSubmitMessage = (e) => {\r\n        if(e.keyCode === 13 && e.shiftKey === false && (/\\S/.test(this.state.text))) {\r\n            e.preventDefault();\r\n            if (this.checkIfSyllableExists(this.state.text,this.state.syllable))\r\n            {\r\n            const data = { text: this.state.text, timeAddition: timer+correctAnswer_time}\r\n            this.context.emit('checkAnswer',data);\r\n            }\r\n            else\r\n            {\r\n             this.context.emit('wrongAnswer');\r\n            }\r\n          }\r\n        }\r\n        // hebrew includes function, can't use js includes\r\n        checkIfSyllableExists= (text,syllable) => {\r\n            if(text.length >= syllable.length)\r\n            {\r\n            for (let index = 0; index < text.length; index++) {\r\n                if(text[index] === syllable[0])\r\n                {\r\n                    for (let j = 1; j < syllable.length; j++) {\r\n                        if(syllable[j] !== text[j]) break;\r\n                        if(syllable.length-1 === j)\r\n                            return true;\r\n                    }\r\n                }                \r\n            }\r\n        }\r\n        return false;\r\n        }\r\n        correctAnswer (syllable) {\r\n            this.setState({text: \"\",syllable:syllable});\r\n            this.changeTextValueByID(this.context.id,\"\");\r\n            const data = {id : this.context.id, value : \"\"}\r\n            this.context.emit('changedTextValue',data)\r\n            // checks if current turn \r\n            if(current_user !== undefined) current_user.style.animation='';\r\n            input_elm.hidden = true;\r\n            //resets timer;\r\n            clearInterval(timer);\r\n            \r\n        }\r\n        incorrectAnswer () {\r\n            balloon_elm.style.animation='';\r\n            balloon_elm.style.animation='shake 0.5s infinite';\r\n            water_error_sound.play();\r\n            setTimeout(function () {balloon_elm.style.animation='shake 4s infinite';},500)\r\n        }\r\n        timesUp (emit) {\r\n            console.log(\"timesup\");\r\n            balloon_elm.style.animation='';\r\n            // exploding water animation\r\n            balloon_elm.setAttribute('data-dis-type',\"self-contained\")\r\n            balloon_elm.setAttribute('data-dis-particle-type','ExplodingParticle')\r\n            balloon_elm.setAttribute('data-dis-reduction-factor','100')\r\n            balloon_elm.setAttribute('data-dis-color','[90, 169, 235]')\r\n            disintegrate.init();\r\n            balloon_elm.classList.add(\"animate\")\r\n            setTimeout(function () {\r\n                balloon_elm.classList.remove(\"animate\"); water_explosion_sound.play();\r\n                if(emit){\r\n                    this.context.emit('startNewTurn') \r\n                }\r\n            }.bind(this),1300)\r\n            if(emit)\r\n            this.context.emit('timesUp')\r\n\r\n\r\n            \r\n\r\n        }\r\n        Winner() {\r\n            clearInterval(timer);\r\n            water_drip_sound.pause();\r\n            water_winner_sound.play();\r\n        }\r\n        \r\n    render() {\r\n        return (\r\n            <div className=\"Balloon-Party\">\r\n\r\n            <div className=\"Game\" id=\"game\"> \r\n                <span className=\"syllable-txt\">{this.state.syllable}</span>\r\n                <img className=\"balloon\" id=\"balloon\" src={waterballoon} alt=\"Balloon\"/>\r\n                <div className=\"users\">\r\n\r\n                { this.state.user_names && this.state.user_names.map(user  => {\r\n                return <User key={user.id} id={user.id} hp={user.hp} name={user.name}  text={user.text} />;\r\n        })}\r\n                </div>\r\n                <div id=\"input\" className=\"input-answer\" hidden>\r\n                <textarea placeholder=\"הקלד/י תשובה\" data-placeholder-text=\"typeheretoanswer\" maxLength=\"40\" value={this.state.text} onChange={this.handleChange} onKeyDown={this.onSubmitMessage} ></textarea>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n        }\r\n","export default __webpack_public_path__ + \"static/media/waterballoon.7aca84cc.png\";","export default __webpack_public_path__ + \"static/media/duck-user.41cabf10.png\";","import React, {Component} from 'react';\r\nimport duckuser from '../assets/duck-user.png'\r\nimport './User.css'\r\n\r\nclass User extends Component {\r\n    render () {\r\n        let deg = 0;\r\n    switch(this.props.hp){\r\n        case 3:\r\n          deg = 0\r\n          break;\r\n        case 2:\r\n          deg = 170\r\n          break;\r\n        case 1:\r\n            deg = 180\r\n        case 0: \r\n            deg = 77\r\n        default:\r\n            deg = 0\r\n      }\r\n  //  let deg = 45 ;\r\n//    const circle_users = 'transform: rotate('+deg+ ')translateX(100px)'\r\n    //transform: `rotate(${deg}deg) rotate(-${deg}deg)`\r\n    return (\r\n        <div className=\"user\" id={this.props.id}>\r\n            <span className=\"name\" dir=\"auto\">{this.props.name}</span>\r\n            \r\n            <img className=\"avatar\" src={duckuser} style={{filter: 'hue-rotate('+deg+'deg)'}} alt={this.props.name}/>\r\n            <span className=\"input\" dir=\"auto\">{this.props.text}</span>\r\n\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default User\r\n","export default __webpack_public_path__ + \"static/media/water_drip.803a298a.wav\";","export default __webpack_public_path__ + \"static/media/water_explode.139eea49.wav\";","export default __webpack_public_path__ + \"static/media/winner_sound_effect.42321c98.wav\";","export default __webpack_public_path__ + \"static/media/water_error.84b2cce7.wav\";","import React from 'react'\r\nimport Chat from '../../components/Chat/Chat'\r\nimport Game from '../../components/Game/Game'\r\nimport {SocketContext, socket} from '../../components/context/socket';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction Room() {\r\n    return (\r\n        <div>\r\n        <SocketContext.Provider value={socket}>\r\n        <Game/>\r\n        <Chat/>\r\n      </SocketContext.Provider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Room)\r\n","import React from 'react';\r\nimport {Router, Route, Switch } from 'react-router-dom';\r\nimport { createBrowserHistory } from \"history\";\r\nimport Room from './components/pages/Room';\r\nfunction App() {\r\n  const history = createBrowserHistory({forceRefresh:true});\r\n  return (\r\n    <div>\r\n        <Router history={history}>\r\n        <Switch>\r\n        <Route exact path='/' component={Room} />\r\n      </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n</React.StrictMode>,\ndocument.getElementById('root')\n);\n\n"],"sourceRoot":""}